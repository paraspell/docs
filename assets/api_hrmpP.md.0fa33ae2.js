import{_ as s,c as a,o as n,d as o}from"./app.4cb00c64.js";const C=JSON.parse('{"title":"HRMP pallet","description":"","frontmatter":{},"headers":[{"level":3,"title":"Package-less implementation of XCM API HRMP features into your application","slug":"package-less-implementation-of-xcm-api-hrmp-features-into-your-application","link":"#package-less-implementation-of-xcm-api-hrmp-features-into-your-application","children":[]},{"level":2,"title":"Construct HRMP call to open channels","slug":"construct-hrmp-call-to-open-channels","link":"#construct-hrmp-call-to-open-channels","children":[]},{"level":2,"title":"Construct HRMP call to close channels","slug":"construct-hrmp-call-to-close-channels","link":"#construct-hrmp-call-to-close-channels","children":[]}],"relativePath":"api/hrmpP.md"}'),e={name:"api/hrmpP.md"},l=o(`<h1 id="hrmp-pallet" tabindex="-1">HRMP pallet <a class="header-anchor" href="#hrmp-pallet" aria-hidden="true">#</a></h1><p>This pallet serves for the construction of calls used for opening and closing HRMP channels.</p><p><em>(These features only works on Locally launched network as these functions require sudo access account)</em></p><h3 id="package-less-implementation-of-xcm-api-hrmp-features-into-your-application" tabindex="-1">Package-less implementation of XCM API HRMP features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-hrmp-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/hrmp/channels?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//Method parameters should be here</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//For eg. from: &#39;Basilisk&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//Replace the method with the method your scenario uses eg. &quot;POST&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">YourMethod</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Here we receive data</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> module</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> section</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> parameters </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Parsing received data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Received data needs to be wrapped in a sudo call - only the sudo account can </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//perform these eg. Alice in localhost</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> promise </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sudo</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sudo</span><span style="color:#A6ACCD;">(api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tx[</span><span style="color:#89DDFF;">module</span><span style="color:#A6ACCD;">][section](</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">parameters))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Call is signed here and can subscribe to extrinsics</span></span>
<span class="line"><span style="color:#A6ACCD;">promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">signAndSend</span><span style="color:#A6ACCD;">(alice</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;font-style:italic;">status</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">txHash</span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h2 id="construct-hrmp-call-to-open-channels" tabindex="-1">Construct HRMP call to open channels <a class="header-anchor" href="#construct-hrmp-call-to-open-channels" aria-hidden="true">#</a></h2><p>The following endpoint serves to open a new HRMP channel between Parachains defined with <code>origin</code> &amp; <code>destination</code> parameters. Users also provide <code>maxSize</code> and <code>maxMessageSize</code> details.</p><p><strong>Endpoint</strong>: <code>POST /hrmp/channels</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Specifies the origin Parachain.</li><li><code>to</code> (Query parameter): (required): Specifies the destination Parachain.</li><li><code>maxSize</code> (Query parameter): (required): Specifies the maximum size.</li><li><code>maxMessageSize</code> (Query parameter): (required): Specifies the maximum message size.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;maxSize&#39; pr &#39;maxMessageSize&#39; is not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/hrmp/channels?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Karura</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> BifrostKusama</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">maxSize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">maxMessageSize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1024</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="construct-hrmp-call-to-close-channels" tabindex="-1">Construct HRMP call to close channels <a class="header-anchor" href="#construct-hrmp-call-to-close-channels" aria-hidden="true">#</a></h2><p>The following endpoint serves to close HRMP channels routed from Parachain defined with the <code>from</code> parameter. Users also provide <code>inbound</code> and <code>outbound</code> details.</p><p><strong>Endpoint</strong>: <code>DELETE /hrmp/channels</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Specifies the origin Parachain.</li><li><code>inbound</code> (Query parameter): (required): Specifies the maximum inbound.</li><li><code>outbound</code> (Query parameter): (required): Specifies the maximum outbound.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;from&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;from&#39; is not a valid Parachain</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;inbound&#39; or &#39;outbound&#39; is not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/hrmp/channels?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Karura</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">inbound</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">outbound</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DELETE</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,17),p=[l];function t(r,c,i,D,y,F){return n(),a("div",null,p)}const d=s(e,[["render",t]]);export{C as __pageData,d as default};
