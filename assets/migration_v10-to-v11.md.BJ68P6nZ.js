import{_ as i,c as a,ae as e,o as t}from"./chunks/framework.DRPMfuGp.js";const c=JSON.parse('{"title":"Migration Guide — v10 ➡ v11","description":"","frontmatter":{},"headers":[],"relativePath":"migration/v10-to-v11.md","filePath":"migration/v10-to-v11.md"}'),n={name:"migration/v10-to-v11.md"};function l(h,s,p,r,o,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="migration-guide-—-v10-➡-v11" tabindex="-1">Migration Guide — v10 ➡ v11 <a class="header-anchor" href="#migration-guide-—-v10-➡-v11" aria-label="Permalink to &quot;Migration Guide — v10 ➡ v11&quot;">​</a></h1><p>This guide covers all <strong>breaking changes</strong> and <strong>new features</strong> introduced in version <strong>v11</strong> of the ParaSpell XCM Tools.<br> These changes affect <strong>XCM SDK</strong>, <strong>XCM API</strong>, <strong>XCM Router</strong>, and <strong>XCM Analyser</strong>.</p><hr><h2 id="_1-removal-of-the-multi-prefix" tabindex="-1">1. Removal of the <code>multi</code> Prefix <a class="header-anchor" href="#_1-removal-of-the-multi-prefix" aria-label="Permalink to &quot;1. Removal of the \`multi\` Prefix&quot;">​</a></h2><p>In <strong>v11</strong>, all functions and types previously using the <code>multi</code> prefix have been <strong>renamed</strong> to remove that prefix.<br> For example:</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- multilocation()</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ location()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- getAssetMultilocation()</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ getAssetLocation()</span></span></code></pre></div><p>This was done, because multi prefix is no longer used within Polkadot.</p><p>✅ <strong>Action Required:</strong><br> Update all your function calls, type imports, and references to remove the <code>multi</code> prefix.</p><hr><h2 id="_2-node-➡-chain-renaming" tabindex="-1">2. <code>NODE</code> ➡ <code>CHAIN</code> Renaming <a class="header-anchor" href="#_2-node-➡-chain-renaming" aria-label="Permalink to &quot;2. \`NODE\` ➡ \`CHAIN\` Renaming&quot;">​</a></h2><p>The term <strong>NODE</strong> is now replaced by <strong>CHAIN</strong> across <strong>types</strong> and <strong>functions</strong>.</p><p>Example changes:</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- TNode</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ TChain</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- getTNode()</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ getTChain()</span></span></code></pre></div><p>Term node is not as informative to new developers as term chain.</p><p>✅ <strong>Action Required:</strong><br> Search your code for any <code>NODE</code> references and replace them with <code>CHAIN</code>.</p><hr><h2 id="_3-new-chain-division-types" tabindex="-1">3. New Chain Division Types <a class="header-anchor" href="#_3-new-chain-division-types" aria-label="Permalink to &quot;3. New Chain Division Types&quot;">​</a></h2><p>New <strong>chain division types</strong> are introduced for more granular chain handling.<br> See documentation: <a href="https://paraspell.github.io/docs/sdk/AssetPallet.html#import-chains-as-constant" target="_blank" rel="noreferrer">Import Chains as Constant</a></p><p>Example usage:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Export all Parachains</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TParachain)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Export all Relay chains</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TRelaychain)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Export all Substrate chains (Parachains + Relays)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TSubstrateChain)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Export chains outside Polkadot ecosystem (Ethereum)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TExternalChain)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Export all chains implemented in ParaSpell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TChain)</span></span></code></pre></div><p>Instead of previous</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Export all Parachains</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CHAINS_WITH_RELAYS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Previous type division was a little messy, new type division counts with chains outside Polkadot ecosystem such as Ethereum as well.</p><p>✅ <strong>Action Required:</strong><br> Update your imports if you plan to use these new chain types for improved type safety and consistency.</p><hr><h2 id="_4-decimal-abstraction-setting-abstractdecimals" tabindex="-1">4. Decimal Abstraction Setting (<code>abstractDecimals</code>) <a class="header-anchor" href="#_4-decimal-abstraction-setting-abstractdecimals" aria-label="Permalink to &quot;4. Decimal Abstraction Setting (\`abstractDecimals\`)&quot;">​</a></h2><p>A new <strong>decimal abstraction</strong> setting has been added to the builder configuration.</p><h3 id="default-behavior" tabindex="-1">Default Behavior <a class="header-anchor" href="#default-behavior" aria-label="Permalink to &quot;Default Behavior&quot;">​</a></h3><ul><li><strong>v11 default:</strong> <code>abstractDecimals: false</code></li><li><strong>Future versions:</strong> Will default to <code>true</code></li></ul><h3 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h3><p>When enabled in Builder config as {<code>abstractDecimals: true</code>}, the SDK automatically abstracts decimals for you.<br> For example sending 1 DOT from Relay chain to Asset Hub:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    abstractDecimals: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Abstracts decimals from amount - so 1 in amount for DOT equals 10_000_000_000 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Polkadot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AssetHubPolkadot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({symbol: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DOT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amount: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(address)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Make sure to disconnect API after it is no longer used (eg. after transaction)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Instead of default {<code>abstractDecimals: false</code>}:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Polkadot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AssetHubPolkadot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({symbol: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DOT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amount: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(address)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Make sure to disconnect API after it is no longer used (eg. after transaction)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>NOTE:</strong></p><p>We advise everyone who do not wish to use <code>abstractDecimals</code> setting to manually set it as <code>false</code> to prevent issues when bumping to new versions in the future.</p><h3 id="special-case-bigint" tabindex="-1">Special Case: <code>bigint</code> <a class="header-anchor" href="#special-case-bigint" aria-label="Permalink to &quot;Special Case: \`bigint\`&quot;">​</a></h3><p>If you pass a <code>bigint</code> as the <code>amount</code> and <strong>decimal abstraction</strong> is enabled,<br> the SDK will <strong>automatically disable</strong> abstraction for that call because <code>bigint</code> does not support floating-point numbers.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//Decimal abstraction will be ignored</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Polkadot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AssetHubPolkadot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({symbol: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DOT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amount: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(address)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Make sure to disconnect API after it is no longer used (eg. after transaction)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>✅ <strong>Action Required:</strong></p><ul><li>If you want <strong>automatic decimal handling</strong>, set <code>abstractDecimals: true</code> in your <code>Builder</code> configuration.</li><li>Be mindful of the future default change to <code>true</code> — review your amount values to ensure they behave as expected.</li><li>Make sure to use String or Number when entering value as Bigint will require decimal inputs.</li></ul><hr><h2 id="_5-multiasset-type-is-now-an-array" tabindex="-1">5. Multiasset type is now an array: <a class="header-anchor" href="#_5-multiasset-type-is-now-an-array" aria-label="Permalink to &quot;5. Multiasset type is now an array:&quot;">​</a></h2><p>Previously we used <code>multiasset</code> selector for multiple assets in one call with the removal of <code>multi</code> prefix we decided to completely replace selector by an array.</p><p>Previously:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Multiasset: {currencySelection </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*for example symbol: symbol or id: id, or location: location*/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amount: amount}, {currencySelection}, ..</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Now:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([{currencySelection </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*for example symbol: symbol or id: id, or location: location*/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, amount: amount}, {currencySelection}, ..]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>✅ <strong>Action Required:</strong></p><ul><li>Replace Multiasset: with an array.</li></ul><hr><h2 id="_6-pull-request-reference" tabindex="-1">6. Pull Request Reference <a class="header-anchor" href="#_6-pull-request-reference" aria-label="Permalink to &quot;6. Pull Request Reference&quot;">​</a></h2><p>For a detailed technical overview of these changes, see:<br> 🔗 <a href="https://github.com/paraspell/xcm-tools/pull/1064" target="_blank" rel="noreferrer">PR #1064 — Decimal abstraction &amp; chain changes</a></p><hr><h2 id="summary-table" tabindex="-1">Summary Table <a class="header-anchor" href="#summary-table" aria-label="Permalink to &quot;Summary Table&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Change</th><th>v10</th><th>v11</th><th>Action</th></tr></thead><tbody><tr><td><code>multi</code> prefix removed everywhere</td><td><code>Multilocation</code></td><td><code>Location</code></td><td>Rename functions &amp; types</td></tr><tr><td><code>NODE</code> renamed to <code>CHAIN</code></td><td><code>TNode</code></td><td><code>TChain</code></td><td>Replace all occurrences in types and functions</td></tr><tr><td>Chain division types</td><td>CHAINS_WITH_RELAYS</td><td>Available via more intuitive types</td><td>Use new types for imports</td></tr><tr><td>Decimal abstraction</td><td>Not available</td><td><code>abstractDecimals</code> option</td><td>Set to <code>true</code> if you want abstraction - false by default, in the future true by default</td></tr><tr><td>BigInt handling</td><td>N/A</td><td>Abstraction auto-disabled</td><td>Be aware when passing <code>bigint</code>, use String or Number instead</td></tr><tr><td>Multiasset currency selector is now an array</td><td><code>.currency(Multiasset: {currency}, {currency})</code></td><td><code>.currency([{currency}, {currency}])</code></td><td>Multiasset currency selector is now completely replaced by array directly.</td></tr></tbody></table><hr><h2 id="recommended-migration-steps" tabindex="-1">Recommended Migration Steps <a class="header-anchor" href="#recommended-migration-steps" aria-label="Permalink to &quot;Recommended Migration Steps&quot;">​</a></h2><ol><li><p><strong>Search &amp; Replace</strong></p><ul><li>Remove <code>multi</code> prefix from all functions and types.</li><li>Replace <code>NODE</code> with <code>CHAIN</code> in constants and functions.</li></ul></li><li><p><strong>Adopt Chain Types</strong></p><ul><li>Use the new chain division types for cleaner imports.</li></ul></li><li><p><strong>Review Decimal Handling</strong></p><ul><li>Decide whether to enable <code>abstractDecimals</code> now or wait for it to become default in future versions.</li></ul></li><li><p><strong>Test BigInt Scenarios</strong></p><ul><li>Ensure <code>bigint</code> amounts work as expected without unwanted decimal abstraction.</li></ul></li><li><p><strong>Replace multiasset currency selectors with array</strong></p><ul><li>Make sure to replace multiasset currency selector directly with an array.</li></ul></li></ol><hr><p>This migration ensures compatibility with <strong>v11</strong> and prepares your codebase for future defaults in decimal handling.</p>`,61)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
