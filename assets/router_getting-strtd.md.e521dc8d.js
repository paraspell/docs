import{_ as s,c as a,o as n,d as l}from"./app.45843b6c.js";const F=JSON.parse('{"title":"Getting started with SpellRouter☄️","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install peer dependencies","slug":"install-peer-dependencies","link":"#install-peer-dependencies","children":[]},{"level":2,"title":"Install XCM Router package","slug":"install-xcm-router-package","link":"#install-xcm-router-package","children":[]},{"level":2,"title":"Importing package","slug":"importing-package","link":"#importing-package","children":[{"level":3,"title":"Option 1: Builder pattern","slug":"option-1-builder-pattern","link":"#option-1-builder-pattern","children":[]},{"level":3,"title":"Option 2: Classic pattern","slug":"option-2-classic-pattern","link":"#option-2-classic-pattern","children":[]}]}],"relativePath":"router/getting-strtd.md"}'),e={name:"router/getting-strtd.md"},p=l(`<h1 id="getting-started-with-spellrouter☄️" tabindex="-1">Getting started with SpellRouter☄️ <a class="header-anchor" href="#getting-started-with-spellrouter☄️" aria-hidden="true">#</a></h1><p>This guide guides you through implementation of XCM Router that allows you to do various exciting actions on Polkadot and Kusama chains.</p><h2 id="install-peer-dependencies" tabindex="-1">Install peer dependencies <a class="header-anchor" href="#install-peer-dependencies" aria-hidden="true">#</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># npm</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@polkadot/api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@polkadot/types</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@polkadot/api-base</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@polkadot/apps-config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@polkadot/util</span></span>
<span class="line"></span></code></pre></div><h2 id="install-xcm-router-package" tabindex="-1">Install XCM Router package <a class="header-anchor" href="#install-xcm-router-package" aria-hidden="true">#</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># npm</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@paraspell/xcm-router</span></span>
<span class="line"></span></code></pre></div><h2 id="importing-package" tabindex="-1">Importing package <a class="header-anchor" href="#importing-package" aria-hidden="true">#</a></h2><p>After installing the XCM-Router package there are two ways of importing it:</p><h3 id="option-1-builder-pattern" tabindex="-1">Option 1: Builder pattern <a class="header-anchor" href="#option-1-builder-pattern" aria-hidden="true">#</a></h3><p>This way allows you to enhance builder patterns and construct your calls in a simple way.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">RouterBuilder</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@paraspell/xcm-router</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="option-2-classic-pattern" tabindex="-1">Option 2: Classic pattern <a class="header-anchor" href="#option-2-classic-pattern" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ESM</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> xcmRouter </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@paraspell/xcm-router</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Multiple import options</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">transfer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">TransactionType</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">TTransferOptions</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">TTxProgressInfo</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@paraspell/xcm-router</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//As Polkadot moves to ESM only, our Router also moves to ESM only. CJS is not supported anymore.</span></span>
<span class="line"></span></code></pre></div>`,13),t=[p];function o(r,c,i,y,d,C){return n(),a("div",null,t)}const h=s(e,[["render",o]]);export{F as __pageData,h as default};
