import{_ as s,c as a,o as n,d as e}from"./app.4cb00c64.js";const C=JSON.parse('{"title":"SpellRouter☄️ playground","description":"","frontmatter":{},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"Launching","slug":"launching","link":"#launching","children":[]},{"level":2,"title":"UI","slug":"ui","link":"#ui","children":[]}],"relativePath":"router/playground.md"}'),l={name:"router/playground.md"},t=e(`<h1 id="spellrouter☄️-playground" tabindex="-1">SpellRouter☄️ playground <a class="header-anchor" href="#spellrouter☄️-playground" aria-hidden="true">#</a></h1><p>Playground allows you to demo-test XCM-Router to perform test main-net transactions and to learn which features will be beneficial for your project.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a></h2><ul><li>Node.js</li><li>pnpm</li></ul><h2 id="launching" tabindex="-1">Launching <a class="header-anchor" href="#launching" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Clone API</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/paraspell/xcm-router.git</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Navigate to the playground folder</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">playground</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install playground packages</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Start playground</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="ui" tabindex="-1">UI <a class="header-anchor" href="#ui" aria-hidden="true">#</a></h2><p>Once launched, you should see the following UI and be able to perform transactions:</p><img width="1673" alt="Screenshot 2023-12-09 at 16 25 25" src="https://gist.github.com/assets/55763425/0f606200-b5e3-4137-bdda-22cb6a6ae7ec">`,9),o=[t];function p(r,i,c,d,u,h){return n(),a("div",null,o)}const g=s(l,[["render",p]]);export{C as __pageData,g as default};
