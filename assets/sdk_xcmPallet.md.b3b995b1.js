import{_ as t,c as a,o as e,d as r}from"./app.4cb00c64.js";const b=JSON.parse('{"title":"xcmPallet, every possible call variation explained","description":"","frontmatter":{},"headers":[{"level":3,"title":"There are three scenarios we use in our SDK. These are:","slug":"there-are-three-scenarios-we-use-in-our-sdk-these-are","link":"#there-are-three-scenarios-we-use-in-our-sdk-these-are","children":[]},{"level":2,"title":"New video guide for this section:","slug":"new-video-guide-for-this-section","link":"#new-video-guide-for-this-section","children":[{"level":3,"title":"There are also two possible ways that our SDK allows you to construct your XCM calls:","slug":"there-are-also-two-possible-ways-that-our-sdk-allows-you-to-construct-your-xcm-calls","link":"#there-are-also-two-possible-ways-that-our-sdk-allows-you-to-construct-your-xcm-calls","children":[]}]},{"level":2,"title":"Builder pattern XCM call from Relay chain to Parachain","slug":"builder-pattern-xcm-call-from-relay-chain-to-parachain","link":"#builder-pattern-xcm-call-from-relay-chain-to-parachain","children":[]},{"level":2,"title":"Builder pattern XCM call from Parachain chain to Relay chain","slug":"builder-pattern-xcm-call-from-parachain-chain-to-relay-chain","link":"#builder-pattern-xcm-call-from-parachain-chain-to-relay-chain","children":[]},{"level":2,"title":"Builder pattern XCM call from Parachain to Parachain","slug":"builder-pattern-xcm-call-from-parachain-to-parachain","link":"#builder-pattern-xcm-call-from-parachain-to-parachain","children":[]},{"level":2,"title":"Function pattern XCM call from Relay chain to Parachain","slug":"function-pattern-xcm-call-from-relay-chain-to-parachain","link":"#function-pattern-xcm-call-from-relay-chain-to-parachain","children":[]},{"level":2,"title":"Function pattern XCM call from Parachain to Relay chain","slug":"function-pattern-xcm-call-from-parachain-to-relay-chain","link":"#function-pattern-xcm-call-from-parachain-to-relay-chain","children":[]},{"level":2,"title":"Function pattern XCM call from Parachain to Parachain","slug":"function-pattern-xcm-call-from-parachain-to-parachain","link":"#function-pattern-xcm-call-from-parachain-to-parachain","children":[]},{"level":2,"title":"Query existential deposit & keepAlive transfers","slug":"query-existential-deposit-keepalive-transfers","link":"#query-existential-deposit-keepalive-transfers","children":[]},{"level":2,"title":"Developer experience","slug":"developer-experience","link":"#developer-experience","children":[{"level":3,"title":"Builder pattern experience","slug":"builder-pattern-experience","link":"#builder-pattern-experience","children":[]},{"level":3,"title":"Control messages into the console","slug":"control-messages-into-the-console","link":"#control-messages-into-the-console","children":[]}]},{"level":2,"title":"Relay chains","slug":"relay-chains","link":"#relay-chains","children":[]},{"level":2,"title":"Polkadot Parachains","slug":"polkadot-parachains","link":"#polkadot-parachains","children":[]},{"level":2,"title":"Kusama Parachains","slug":"kusama-parachains","link":"#kusama-parachains","children":[]}],"relativePath":"sdk/xcmPallet.md"}'),s={name:"sdk/xcmPallet.md"},n=r(`<h1 id="xcmpallet-every-possible-call-variation-explained" tabindex="-1">xcmPallet, every possible call variation explained <a class="header-anchor" href="#xcmpallet-every-possible-call-variation-explained" aria-hidden="true">#</a></h1><h3 id="there-are-three-scenarios-we-use-in-our-sdk-these-are" tabindex="-1">There are three scenarios we use in our SDK. These are: <a class="header-anchor" href="#there-are-three-scenarios-we-use-in-our-sdk-these-are" aria-hidden="true">#</a></h3><ul><li>Relay chain to Parachain XCM transfer</li><li>Parachain to Relay chain XCM transfer</li><li>Parachain to Parachain XCM transfer</li></ul><h2 id="new-video-guide-for-this-section" tabindex="-1">New video guide for this section: <a class="header-anchor" href="#new-video-guide-for-this-section" aria-hidden="true">#</a></h2><p><a href="https://youtu.be/MoCrt2vYJJU" target="_blank" rel="noreferrer"><img src="https://user-images.githubusercontent.com/55763425/238154617-0b57c5c8-76cf-490c-812d-481f097f4977.png" alt="xcmPallet"></a></p><h3 id="there-are-also-two-possible-ways-that-our-sdk-allows-you-to-construct-your-xcm-calls" tabindex="-1">There are also two possible ways that our SDK allows you to construct your XCM calls: <a class="header-anchor" href="#there-are-also-two-possible-ways-that-our-sdk-allows-you-to-construct-your-xcm-calls" aria-hidden="true">#</a></h3><ul><li>Construct your calls via Builder pattern (recommended, easy to use)</li><li>Construct them classic function-like way</li></ul><p>Both of these ways will be explained.</p><h2 id="builder-pattern-xcm-call-from-relay-chain-to-parachain" tabindex="-1">Builder pattern XCM call from Relay chain to Parachain <a class="header-anchor" href="#builder-pattern-xcm-call-from-relay-chain-to-parachain" aria-hidden="true">#</a></h2><p>Only the <code>to</code> parameter is provided, thus the Relay chain to Parachain scenario will be used.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Builder</span><span style="color:#A6ACCD;">(api)        </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Basilisk</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)       </span><span style="color:#676E95;font-style:italic;">// Destination Parachain //You can now add custom ParachainID eg. .to(&#39;Basilisk&#39;, 2024)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">amount</span><span style="color:#A6ACCD;">(amount)       </span><span style="color:#676E95;font-style:italic;">// Token amount</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#A6ACCD;">(address)     </span><span style="color:#676E95;font-style:italic;">// AccountId32 or AccountKey20 address</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">()              </span><span style="color:#676E95;font-style:italic;">// Function called to build call</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="builder-pattern-xcm-call-from-parachain-chain-to-relay-chain" tabindex="-1">Builder pattern XCM call from Parachain chain to Relay chain <a class="header-anchor" href="#builder-pattern-xcm-call-from-parachain-chain-to-relay-chain" aria-hidden="true">#</a></h2><p>Only the <code>from</code> parameter is provided, thus the Parachain to Relay chain scenario will be used.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Builder</span><span style="color:#A6ACCD;">(api)            </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Acala</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)            </span><span style="color:#676E95;font-style:italic;">// Origin Parachain</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">amount</span><span style="color:#A6ACCD;">(amount)           </span><span style="color:#676E95;font-style:italic;">// Token amount</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#A6ACCD;">(address)         </span><span style="color:#676E95;font-style:italic;">// AccountId32 address</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">()                  </span><span style="color:#676E95;font-style:italic;">// Function called to build call</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="builder-pattern-xcm-call-from-parachain-to-parachain" tabindex="-1">Builder pattern XCM call from Parachain to Parachain <a class="header-anchor" href="#builder-pattern-xcm-call-from-parachain-to-parachain" aria-hidden="true">#</a></h2><p>Both <code>from</code> and <code>to</code> parameters are provided, thus the Parachain to Parachain scenario will be used.</p><p><strong>NOTE</strong> If you wish to transfer from Parachain that uses long IDs for example Moonbeam you have to add character &#39;n&#39; the end of currencyID. Eg: <code>.currency(42259045809535163221576417993425387648n)</code> will mean you transfer xcDOT.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Builder</span><span style="color:#A6ACCD;">(api)            </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Karura</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)           </span><span style="color:#676E95;font-style:italic;">// Origin Parachain</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Basilisk</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)       </span><span style="color:#676E95;font-style:italic;">// Destination Parachain //You can now add custom ParachainID eg. .to(&#39;Basilisk&#39;, 2024)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currency</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">KSM</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)          </span><span style="color:#676E95;font-style:italic;">// Token symbol (String) || TokenID (Number)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">amount</span><span style="color:#A6ACCD;">(amount)           </span><span style="color:#676E95;font-style:italic;">// Token amount</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#A6ACCD;">(address)         </span><span style="color:#676E95;font-style:italic;">// AccountId32 or AccountKey20 address</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">()                  </span><span style="color:#676E95;font-style:italic;">// Function called to build call</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="function-pattern-xcm-call-from-relay-chain-to-parachain" tabindex="-1">Function pattern XCM call from Relay chain to Parachain <a class="header-anchor" href="#function-pattern-xcm-call-from-relay-chain-to-parachain" aria-hidden="true">#</a></h2><p>This XCM constructor uses a native Relay chain XCM pallet. It is very straightforward to implement.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> paraspell</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xcmPallet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">transferRelayToPara</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  api</span><span style="color:#89DDFF;">?,</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">  destination</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// Destination Parachain</span></span>
<span class="line"><span style="color:#A6ACCD;">  amount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// Token amount</span></span>
<span class="line"><span style="color:#A6ACCD;">  to            </span><span style="color:#676E95;font-style:italic;">// AccountId32 or AccountKey20 address</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="function-pattern-xcm-call-from-parachain-to-relay-chain" tabindex="-1">Function pattern XCM call from Parachain to Relay chain <a class="header-anchor" href="#function-pattern-xcm-call-from-parachain-to-relay-chain" aria-hidden="true">#</a></h2><p>This XCM constructor uses the send function same as the Parachain to Parachain scenario. The difference is, that this scenario does <code>not specify destination Parachain</code>. This way function knows that the transfer is to the Relay chain.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> paraspell</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xcmPallet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  api</span><span style="color:#89DDFF;">?,</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">  origin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// Origin Parachain</span></span>
<span class="line"><span style="color:#A6ACCD;">  amount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// Token amount</span></span>
<span class="line"><span style="color:#A6ACCD;">  to            </span><span style="color:#676E95;font-style:italic;">// AccountId32 or AccountKey20 address</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="function-pattern-xcm-call-from-parachain-to-parachain" tabindex="-1">Function pattern XCM call from Parachain to Parachain <a class="header-anchor" href="#function-pattern-xcm-call-from-parachain-to-parachain" aria-hidden="true">#</a></h2><p>This XCM constructor uses the send function same as the Parachain to Relay chain scenario. The difference is, that this scenario <code>does specify destination Parachain</code>. This way function knows that the transfer is to another Parachain.</p><p><strong>NOTE</strong> If you wish to transfer from Parachain that uses long IDs for example Moonbeam you have to add character &#39;n&#39; the end of currencyID. Eg: <code>currency = 42259045809535163221576417993425387648n</code> will mean you transfer xcDOT.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> paraspell</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xcmPallet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  api</span><span style="color:#89DDFF;">?,</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">  origin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// Origin Parachain</span></span>
<span class="line"><span style="color:#A6ACCD;">  currency</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;">// Token symbol (String) || TokenID (Number)</span></span>
<span class="line"><span style="color:#A6ACCD;">  amount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// Token amount</span></span>
<span class="line"><span style="color:#A6ACCD;">  to</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">           </span><span style="color:#676E95;font-style:italic;">// AccountId32 or AccountKey20 address</span></span>
<span class="line"><span style="color:#A6ACCD;">  destination   </span><span style="color:#676E95;font-style:italic;">// Destination Parachain</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="query-existential-deposit-keepalive-transfers" tabindex="-1">Query existential deposit &amp; keepAlive transfers <a class="header-anchor" href="#query-existential-deposit-keepalive-transfers" aria-hidden="true">#</a></h2><p>Latest SDK versions now offer ability to query existential deposit on implemented chains using simple call:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getExistentialDeposit</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@paraspell/sdk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ed </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getExistentialDeposit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Acala</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>SDK also offers keepAlive option for all three XCM transfer scenarios and for both Builder and Function patterns. This option will check for existencial deposit on destination chain, query destination address balance and determine whether the amount you wish to send is sufficient for XCM transfer.</p><p>Builder pattern example:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Builder</span><span style="color:#A6ACCD;">(api) </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Acala</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)         </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">amount</span><span style="color:#A6ACCD;">(amount)       </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">address</span><span style="color:#A6ACCD;">(address)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">useKeepAlive</span><span style="color:#A6ACCD;">(destinationNodeAPI) </span><span style="color:#676E95;font-style:italic;">//Destination node API    </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">()   </span></span>
<span class="line"></span></code></pre></div><p>Function pattern example:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> paraspell</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xcmPallet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    api</span><span style="color:#89DDFF;">?,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Api parameter is optional</span></span>
<span class="line"><span style="color:#A6ACCD;">    destination</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    amount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    to</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    destApiForKeepAlive </span><span style="color:#676E95;font-style:italic;">//API of destination Node)</span></span>
<span class="line"></span></code></pre></div><h2 id="developer-experience" tabindex="-1">Developer experience <a class="header-anchor" href="#developer-experience" aria-hidden="true">#</a></h2><h3 id="builder-pattern-experience" tabindex="-1">Builder pattern experience <a class="header-anchor" href="#builder-pattern-experience" aria-hidden="true">#</a></h3><p>When developing with the Builder pattern, the developer is guided by the typescript and thus knows which parameter can be added next. This increases the developer experience and makes SDK easier to use. <img width="459" alt="builder" src="https://user-images.githubusercontent.com/55763425/214562882-dd1a052e-c420-4131-bb50-3b656fabd10c.png"></p><h3 id="control-messages-into-the-console" tabindex="-1">Control messages into the console <a class="header-anchor" href="#control-messages-into-the-console" aria-hidden="true">#</a></h3><p>Once the call is being constructed developer is warned about major details regarding the call into the console. This way they can ensure, that the call they wanted to create is being created. <img width="409" alt="212045110-c001fcb7-8cc2-421c-9cd0-6d8205b3b11f" src="https://user-images.githubusercontent.com/55763425/212065770-48ff4b35-2463-48b3-bd51-bae56b2105a8.png"></p><h1 id="list-of-nodes-supported-by-paraspell✨" tabindex="-1">List of nodes supported by ParaSpell✨ <a class="header-anchor" href="#list-of-nodes-supported-by-paraspell✨" aria-hidden="true">#</a></h1><h2 id="relay-chains" tabindex="-1">Relay chains <a class="header-anchor" href="#relay-chains" aria-hidden="true">#</a></h2><table><thead><tr><th>Node name</th><th>Website</th><th>Github</th><th>Polkadot.js</th><th>Supported XCM Pallet</th><th>Current latest XCM Version</th></tr></thead><tbody><tr><td>Polkadot</td><td><a href="https://www.parity.io/" target="_blank" rel="noreferrer">Website</a></td><td>-</td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.polkadot.io#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Kusama</td><td><a href="https://www.parity.io/" target="_blank" rel="noreferrer">Website</a></td><td>-</td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama-rpc.polkadot.io#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>polkadotXCM</td><td>XCM V3</td></tr></tbody></table><h2 id="polkadot-parachains" tabindex="-1">Polkadot Parachains <a class="header-anchor" href="#polkadot-parachains" aria-hidden="true">#</a></h2><table><thead><tr><th>Node name</th><th>Website</th><th>Github</th><th>Polkadot.js</th><th>Node id</th><th>Supported XCM Pallet</th><th>Current latest XCM Version</th></tr></thead><tbody><tr><td>PolkadotAssetHub</td><td><a href="https://www.parity.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/paritytech/cumulus" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fstatemint.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>1000</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Acala</td><td><a href="https://acala.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/AcalaNetwork/Acala" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2F1rpc.io%2Faca#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2000</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Astar</td><td><a href="https://astar.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/AstarNetwork/Astar" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fastar-rpc.dwellir.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2006</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>BifrostPolkadot</td><td><a href="https://thebifrost.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/bifrost-finance/bifrost" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fhk.p.bifrost-rpc.liebi.com%2Fws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2030</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Centrifuge</td><td><a href="https://centrifuge.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/centrifuge/centrifuge-chain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fcentrifuge-parachain.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2031</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Clover</td><td><a href="https://clv.org/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/clover-network/clover" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-para.clover.finance#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2002</td><td>xTokens</td><td>XCM V1</td></tr><tr><td>ComposableFinance</td><td><a href="https://www.composable.finance/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/ComposableFi/" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.composable.finance#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2019</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Crust</td><td><a href="https://crust.network/?ref=parachains-info" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/crustio/crust" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fcrust-parachain.crustapps.net#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2008</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Darwinia</td><td><a href="https://darwinia.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/darwinia-network/darwinia" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fparachain-rpc.darwinia.network#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2046</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Equilibrium</td><td><a href="https://equilibrium.io/?ref=parachains-info" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/equilibrium-eosdt/equilibrium-substrate-chain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fequilibrium-rpc.dwellir.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2011</td><td>polkadotXcm</td><td>XCM V3</td></tr><tr><td>HydraDX</td><td><a href="https://hydradx.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/galacticcouncil/HydraDX-node" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.hydradx.cloud#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2034</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Interlay</td><td><a href="https://interlay.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/interlay/interbtc" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fapi.interlay.io%2Fparachain#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2032</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Litentry</td><td><a href="https://litentry.com/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/litentry/litentry-parachain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Flitentry-rpc.dwellir.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2013</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Manta</td><td><a href="https://manta.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/Manta-Network/Manta" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fws.manta.systems#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2104</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Moonbeam</td><td><a href="https://moonbeam.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/PureStake/moonbeam" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fmoonbeam.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2004</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Nodle</td><td><a href="https://www.nodle.com" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/NodleCode/chain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fnodle-parachain.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2026</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>OriginTrail</td><td><a href="https://parachain.origintrail.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/OriginTrail/origintrail-parachain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fparachain-rpc.origin-trail.network#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2043</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Pendulum</td><td><a href="https://pendulumchain.org/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/pendulum-chain/pendulum-prototype" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-pendulum.prd.pendulumchain.tech#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2094</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Polkadex</td><td><a href="https://polkadex.trade/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/Polkadex-Substrate/Polkadex" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadex-parachain.public.curie.radiumblock.co%2Fws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2040</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Parallel</td><td><a href="https://parallel.fi/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/parallel-finance/parallel" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fparallel-rpc.dwellir.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2012</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Unique</td><td><a href="https://unique.network/?ref=parachains-info" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/usetech-llc/polkadot_api_dotnet" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Feu-ws.unique.network%2F#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2037</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Zeitgeist</td><td><a href="https://zeitgeist.pm/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/zeitgeistpm/zeitgeist" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fmain.rpc.zeitgeist.pm%2Fws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2092</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Phala</td><td><a href="https://phala.network/?ref=parachains-info" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/Phala-Network/phala-blockchain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fapi.phala.network%2Fws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2035</td><td>xTransfer</td><td>XCM V3</td></tr><tr><td>Collectives</td><td><a href="https://polkadot.network/blog/proposal-for-common-good-parachains?ref=parachains-info" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/paritytech/polkadot-sdk" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot-collectives-rpc.polkadot.io#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>1001</td><td>PolkadotXCM</td><td>XCM V3</td></tr></tbody></table><h2 id="kusama-parachains" tabindex="-1">Kusama Parachains <a class="header-anchor" href="#kusama-parachains" aria-hidden="true">#</a></h2><table><thead><tr><th>Node name</th><th>Website</th><th>Github</th><th>Polkadot.js</th><th>Node id</th><th>Supported XCM Pallet</th><th>Current latest XCM Version</th></tr></thead><tbody><tr><td>KusamaAssetHub</td><td><a href="https://www.parity.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/paritytech/cumulus" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fstatemine-rpc.dwellir.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>1000</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Encointer</td><td><a href="https://encointer.org/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/encointer/encointer-parachain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.api.encointer.org#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>1001</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Altair</td><td><a href="https://centrifuge.io/altair/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/centrifuge/centrifuge-chain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Faltair.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2088</td><td>xTokens</td><td>XCM V1</td></tr><tr><td>Amplitude</td><td><a href="https://pendulumchain.org/amplitude?utm_source=parachains_info&amp;utm_medium=referral&amp;utm_campaign=parachains_info" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/pendulum-chain/pendulum" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-amplitude.pendulumchain.tech#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2124</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Basilisk</td><td><a href="https://bsx.fi/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/galacticcouncil/Basilisk-node" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.basilisk.cloud#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2090</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>BifrostKusama</td><td><a href="https://thebifrost.io/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/bifrost-finance/bifrost" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fbifrost-parachain.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2001</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Pioneer</td><td><a href="https://bit.country/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/bit-country/Metaverse-Network" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpioneer-rpc-3.bit.country%2Fwss#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2096</td><td>xTokens</td><td>XCM V1</td></tr><tr><td>Calamari</td><td><a href="https://calamari.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/Manta-Network/Manta" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fws.calamari.systems%2F#/accounts" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2084</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>CrustShadow</td><td><a href="https://crust.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/crustio/crust-node" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-shadow.crust.network%2F#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2012</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Crab</td><td><a href="https://crab.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/darwinia-network/darwinia/tree/main/runtime/crab" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fcrab-parachain-rpc.darwinia.network%2F#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2105</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Genshiro</td><td><a href="https://genshiro.io" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/equilibrium-eosdt" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fnode.ksm.genshiro.io#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2024</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Imbue</td><td><a href="https://www.imbue.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/ImbueNetwork/imbue" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.imbuenetwork.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2121</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Integritee</td><td><a href="https://integritee.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/integritee-network/integritee-node" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fintegritee-kusama.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2015</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>InvArchTinker</td><td><a href="https://invarch.network/tinkernet" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/InvArch/InvArch-Node" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Ftinkernet-rpc.dwellir.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2125</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Karura</td><td><a href="https://acala.network/karura" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/AcalaNetwork/Acala" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkarura-rpc-2.aca-api.network%2Fws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2000</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Kintsugi</td><td><a href="https://kintsugi.interlay.io/bridge?tab=issue" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/interlay/interbtc-ui" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fapi-kusama.interlay.io%2Fparachain#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2092</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Litmus</td><td><a href="https://litentry.com/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/litentry/litentry-parachain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.litmus-parachain.litentry.io#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2106</td><td>xTokens</td><td>XCM V1</td></tr><tr><td>Mangata</td><td><a href="https://www.mangata.finance/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/mangata-finance/mangata-node" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama-archive.mangata.online#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2110</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Moonriver</td><td><a href="https://moonbeam.network/networks/moonriver/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/PureStake/moonbeam" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fmoonriver.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2023</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>ParallelHeiko</td><td><a href="https://parallel.fi/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/parallel-finance/parallel" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fheiko-rpc.parallel.fi#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2085</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Picasso</td><td><a href="https://picasso.xyz/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/ComposableFi/composable" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpicasso-rpc.composable.finance#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2087</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Quartz</td><td><a href="https://unique.network/quartz/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/usetech-llc/polkadot_api_dotnet" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fus-ws-quartz.unique.network#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2095</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Robonomics</td><td><a href="https://robonomics.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/airalab/robonomics" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2048</td><td>polkadotXCM</td><td>XCM V1</td></tr><tr><td>Shiden</td><td><a href="https://shiden.astar.network/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/AstarNetwork/Astar" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fshiden.api.onfinality.io%2Fpublic-ws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2007</td><td>polkadotXCM</td><td>XCM V3</td></tr><tr><td>Turing</td><td><a href="https://oak.tech/turing/home/" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/OAK-Foundation/OAK-blockchain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fturing-rpc.dwellir.com#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2114</td><td>xTokens</td><td>XCM V3</td></tr><tr><td>Khala</td><td><a href="https://phala.network/khala?ref=parachains-info" target="_blank" rel="noreferrer">Website</a></td><td><a href="https://github.com/Phala-Network/phala-blockchain" target="_blank" rel="noreferrer">Github</a></td><td><a href="https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkhala-api.phala.network%2Fws#/explorer" target="_blank" rel="noreferrer">Polkadot.js</a></td><td>2004</td><td>xTransfer</td><td>XCM V3</td></tr></tbody></table>`,60),o=[n];function l(p,d,i,c,h,f){return e(),a("div",null,o)}const y=t(s,[["render",l]]);export{b as __pageData,y as default};
