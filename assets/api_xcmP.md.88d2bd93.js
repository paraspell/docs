import{_ as s,c as a,o as n,d as o}from"./app.5dd1b422.js";const A=JSON.parse('{"title":"Use XCM SDKü™Ñ within XCM API","description":"","frontmatter":{},"headers":[{"level":2,"title":"Send XCM","slug":"send-xcm","link":"#send-xcm","children":[{"level":3,"title":"Package-less implementation of XCM API XCM features into your application","slug":"package-less-implementation-of-xcm-api-xcm-features-into-your-application","link":"#package-less-implementation-of-xcm-api-xcm-features-into-your-application","children":[]},{"level":3,"title":"Relay chain to Parachain (DMP)","slug":"relay-chain-to-parachain-dmp","link":"#relay-chain-to-parachain-dmp","children":[]},{"level":3,"title":"Parachain chain to Relay chain (UMP)","slug":"parachain-chain-to-relay-chain-ump","link":"#parachain-chain-to-relay-chain-ump","children":[]},{"level":3,"title":"Parachain to Parachain (HRMP)","slug":"parachain-to-parachain-hrmp","link":"#parachain-to-parachain-hrmp","children":[]},{"level":3,"title":"Custom multilocation call","slug":"custom-multilocation-call","link":"#custom-multilocation-call","children":[]}]},{"level":2,"title":"Ecosystem Bridges","slug":"ecosystem-bridges","link":"#ecosystem-bridges","children":[{"level":3,"title":"Kusama<>Polkadot bridge","slug":"kusama-polkadot-bridge","link":"#kusama-polkadot-bridge","children":[]},{"level":3,"title":"Snowbridge Ethereum -> AssetHubPolkadot","slug":"snowbridge-ethereum-assethubpolkadot","link":"#snowbridge-ethereum-assethubpolkadot","children":[]},{"level":3,"title":"Snowbridge AssetHubPolkadot -> Ethereum","slug":"snowbridge-assethubpolkadot-ethereum","link":"#snowbridge-assethubpolkadot-ethereum","children":[]}]},{"level":2,"title":"Batch call","slug":"batch-call","link":"#batch-call","children":[]},{"level":2,"title":"Asset claim","slug":"asset-claim","link":"#asset-claim","children":[]},{"level":2,"title":"Transfer info query","slug":"transfer-info-query","link":"#transfer-info-query","children":[]},{"level":2,"title":"Asset query","slug":"asset-query","link":"#asset-query","children":[{"level":3,"title":"Package-less implementation of XCM API Asset features into your application","slug":"package-less-implementation-of-xcm-api-asset-features-into-your-application","link":"#package-less-implementation-of-xcm-api-asset-features-into-your-application","children":[]},{"level":3,"title":"Query native asset balance","slug":"query-native-asset-balance","link":"#query-native-asset-balance","children":[]},{"level":3,"title":"Query foreign asset balance","slug":"query-foreign-asset-balance","link":"#query-foreign-asset-balance","children":[]},{"level":3,"title":"Query assets object","slug":"query-assets-object","link":"#query-assets-object","children":[]},{"level":3,"title":"Query asset ID","slug":"query-asset-id","link":"#query-asset-id","children":[]},{"level":3,"title":"Query Relay chain asset symbol","slug":"query-relay-chain-asset-symbol","link":"#query-relay-chain-asset-symbol","children":[]},{"level":3,"title":"Query native assets","slug":"query-native-assets","link":"#query-native-assets","children":[]},{"level":3,"title":"Query foreign assets","slug":"query-foreign-assets","link":"#query-foreign-assets","children":[]},{"level":3,"title":"Query all asset symbols","slug":"query-all-asset-symbols","link":"#query-all-asset-symbols","children":[]},{"level":3,"title":"Query asset support","slug":"query-asset-support","link":"#query-asset-support","children":[]},{"level":3,"title":"Query asset decimals","slug":"query-asset-decimals","link":"#query-asset-decimals","children":[]},{"level":3,"title":"Query Parachain ID","slug":"query-parachain-id","link":"#query-parachain-id","children":[]},{"level":3,"title":"Query Parachain name","slug":"query-parachain-name","link":"#query-parachain-name","children":[]},{"level":3,"title":"Query list of implemented Parachains","slug":"query-list-of-implemented-parachains","link":"#query-list-of-implemented-parachains","children":[]}]},{"level":2,"title":"Query XCM pallets","slug":"query-xcm-pallets","link":"#query-xcm-pallets","children":[{"level":3,"title":"Package-less implementation of XCM API XCM Pallet Query features into your application","slug":"package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application","link":"#package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application","children":[]},{"level":3,"title":"Get default XCM pallet","slug":"get-default-xcm-pallet","link":"#get-default-xcm-pallet","children":[]},{"level":3,"title":"Get all supported XCM pallets","slug":"get-all-supported-xcm-pallets","link":"#get-all-supported-xcm-pallets","children":[]}]}],"relativePath":"api/xcmP.md"}'),l={name:"api/xcmP.md"},e=o(`<h1 id="use-xcm-sdkü™Ñ-within-xcm-api" tabindex="-1">Use XCM SDKü™Ñ within XCM API <a class="header-anchor" href="#use-xcm-sdkü™Ñ-within-xcm-api" aria-hidden="true">#</a></h1><p>Following guide guides you through XCM SDK functionality implemented in XCM API.</p><h2 id="send-xcm" tabindex="-1">Send XCM <a class="header-anchor" href="#send-xcm" aria-hidden="true">#</a></h2><p>This functionality allows you to send XCM messages across Paraverse.</p><h3 id="package-less-implementation-of-xcm-api-xcm-features-into-your-application" tabindex="-1">Package-less implementation of XCM API XCM features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-xcm-features-into-your-application" aria-hidden="true">#</a></h3><p><code>NOTE:</code> We recently introduced new much simpler way to implement XCM API! You can now request hashed response of built call which offlifts you from parsing and works right away!</p><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//Chain WS API instance that will send generated XCM Call</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> wsProvider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WsProvider</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YourChainWSPort</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Specify &quot;YourChainWSPort&quot; with WS Port of sender chain </span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> api </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> ApiPromise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">provider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> wsProvider </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-hash‚Äù,</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ‚ÄòPOST‚Äô</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">           	</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">origin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">destination</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">currencySpec</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">amount</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">             </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hash </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Received response is parsed to the call</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> call </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tx</span><span style="color:#A6ACCD;">(hash)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Call is then signed and can be subscribed to extrinsics</span></span>
<span class="line"><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">signAndSend</span><span style="color:#A6ACCD;">(address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">signer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> injector</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">signer </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">status</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">txHash</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span></code></pre></div><h3 id="relay-chain-to-parachain-dmp" tabindex="-1">Relay chain to Parachain (DMP) <a class="header-anchor" href="#relay-chain-to-parachain-dmp" aria-hidden="true">#</a></h3><p>The following endpoint constructs the Relay chain to the Parachain XCM message. This message is constructed by providing the <code>to</code> parameter.</p><p><strong>Endpoint</strong>: <code>POST /x-transfer-hash</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>to</code> (Inside JSON body): (required): Represents the Parachain to which the assets will be transferred.</li><li><code>amount</code> (Inside JSON body): (required): Specifies the amount of assets to transfer. It should be a numeric value.</li><li><code>address</code> (Inside JSON body): (required): Specifies the address of the recipient.</li><li><code>xcmVersion</code> (Inside JSON body): (optional): Specifies manually selected XCM version if pre-selected does not work. Format: Vx - where x = version number eg. V4.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when parameter &#39;to&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;to&#39; is not a valid Parachain</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;amount&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;amount&#39; is not a valid amount</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;address&#39; is not a valid address</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Parachain&quot; with destination Parachain, e.g., &quot;Moonbeam&quot; or custom Multilocation</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amount</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Amount&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with destination wallet address (In AccountID32 or AccountKey20 Format) or custom Multilocation</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//xcmVersion: &quot;Vx&quot; //Optional parameter - replace &quot;Vx&quot; with V and version number eg. &quot;V4&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h3 id="parachain-chain-to-relay-chain-ump" tabindex="-1">Parachain chain to Relay chain (UMP) <a class="header-anchor" href="#parachain-chain-to-relay-chain-ump" aria-hidden="true">#</a></h3><p>The following endpoint constructs Parachain to Relay chain XCM message. This message is constructed by providing the <code>from</code> parameter.</p><p><strong>Endpoint</strong>: <code>POST /x-transfer-hash</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Inside JSON body): (required): Represents the Parachain from which the assets will be transferred.</li><li><code>amount</code> (Inside JSON body): (required): Specifies the amount of assets to transfer. It should be a numeric value.</li><li><code>address</code> (Inside JSON body): (required): Specifies the address of the recipient.</li><li><code>xcmVersion</code> (Inside JSON body): (optional): Specifies manually selected XCM version if pre-selected does not work. Format: Vx - where x = version number eg. V4.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when parameter &#39;from&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;from&#39; is not a valid Parachain</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;amount&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;amount&#39; is not a valid amount</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;address&#39; is not a valid address</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Parachain&quot; with sender Parachain, e.g., &quot;Acala&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amount</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Amount&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with destination wallet address (In AccountID32 or AccountKey20 Format) or custom Multilocation</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//xcmVersion: &quot;Vx&quot; //Optional parameter - replace &quot;Vx&quot; with V and version number eg. &quot;V4&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h3 id="parachain-to-parachain-hrmp" tabindex="-1">Parachain to Parachain (HRMP) <a class="header-anchor" href="#parachain-to-parachain-hrmp" aria-hidden="true">#</a></h3><p>The following endpoint allows got creation of Parachain to Parachain XCM call. This call is specified by Parachains selected as origin - <code>from</code> and destination - <code>to</code> parameters.</p><p><strong>Endpoint</strong>: <code>POST /x-transfer-hash</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Inside JSON body): (required): Represents the Parachain from which the assets will be transferred.</li><li><code>to</code> (Inside JSON body): (required): Represents the Parachain to which the assets will be transferred.</li><li><code>currency</code> (Inside JSON body): (required): Represents the asset being sent. It should be a string value.</li><li><code>amount</code> (Inside JSON body): (required): Specifies the amount of assets to transfer. It should be a numeric value.</li><li><code>address</code> (Inside JSON body): (required): Specifies the address of the recipient.</li><li><code>xcmVersion</code> (Inside JSON body): (optional): Specifies manually selected XCM version if pre-selected does not work. Format: Vx - where x = version number eg. V4.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is not a valid currency</li><li><code>400</code> (Bad request exception) - Returned when entered nodes &#39;from&#39; and &#39;to&#39; are not compatible for the transaction</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;amount&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;amount&#39; is not a valid amount</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;address&#39; is not a valid address</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>NOTE</strong> If you wish to transfer from Parachain that uses long IDs for example Moonbeam you have to add character &#39;n&#39; the end of currencyID. Eg: <code>currency: &quot;42259045809535163221576417993425387648n&quot;</code> will mean you wish to transfer xcDOT.</p><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Parachain&quot; with sender Parachain, e.g., &quot;Acala&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Parachain&quot; with destination Parachain, e.g., &quot;Moonbeam&quot; or custom Multilocation</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">currencySpec</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// {id: currencyID} | {symbol: currencySymbol} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;Native&quot;,&quot;value&quot;: &quot;currencySymbol&quot;} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;Foreign&quot;,&quot;value&quot;: &quot;currencySymbol&quot;} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;ForeignAbstract&quot;,&quot;value&quot;: &quot;currencySymbolAlias&quot;} | {multilocation: AssetMultilocationString} | {multilocation: AssetMultilocationJson} | {multilocation: &quot;type&quot;: &quot;Override&quot;,&quot;value&quot;: &quot;CustomAssetMultilocationJson&quot;} | {multiasset: multilocationJsonArray}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amount</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Amount&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with destination wallet address (In AccountID32 or AccountKey20 Format) or custom Multilocation</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//xcmVersion: &quot;Vx&quot; //Optional parameter - replace &quot;Vx&quot; with V and version number eg. &quot;V4&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h3 id="custom-multilocation-call" tabindex="-1">Custom multilocation call <a class="header-anchor" href="#custom-multilocation-call" aria-hidden="true">#</a></h3><p>You can now customize multilocations for Address, Currency and Destination within all three scenarios (where possible).</p><ul><li><strong>Parameters</strong>: <ul><li>Same as in above scenarios</li></ul></li><li><strong>Errors</strong>: <ul><li>Same as in above scenarios</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Parachain&quot; with sender Parachain, e.g., &quot;Acala&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Parachain&quot; with destination Parachain, e.g., &quot;Moonbeam&quot; or custom Multilocation</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with destination wallet address (In AccountID32 or AccountKey20 Format) or custom Multilocation</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">multilocation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">          type: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Override</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">parents</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">interior</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">X2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">PalletInstance</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">50</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">GeneralIndex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">41</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amount</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Amount&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//xcmVersion: &quot;Vx&quot; //Optional parameter - replace &quot;Vx&quot; with V and version number eg. &quot;V4&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="ecosystem-bridges" tabindex="-1">Ecosystem Bridges <a class="header-anchor" href="#ecosystem-bridges" aria-hidden="true">#</a></h2><p>This section sums up currently available and implemented ecosystem bridges that are offered in the XCM API. Implementing cross-ecosystem asset transfers was never this easy!</p><h3 id="kusama-polkadot-bridge" tabindex="-1">Kusama&lt;&gt;Polkadot bridge <a class="header-anchor" href="#kusama-polkadot-bridge" aria-hidden="true">#</a></h3><p>Latest API versions support Polkadot &lt;&gt; Kusama bridge in very native and intuitive way. You just construct the Polkadot &lt;&gt; Kusama transfer as standard Parachain to Parachain scenario transfer.</p><ul><li><strong>Parameters</strong>: <ul><li>Same as in Parachain -&gt;¬†Parachain scenario</li></ul></li><li><strong>Errors</strong>: <ul><li>Same as in Parachain -&gt; Parachain scenario</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">AssetHubPolkadot</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Or AssetHubKusama</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">AssetHubKusama</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// Or AssetHubPolkadot</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">symbol</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">KSM</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Or DOT</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amount</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Amount&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// AccountID 32 address</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="snowbridge-ethereum-assethubpolkadot" tabindex="-1">Snowbridge Ethereum -&gt; AssetHubPolkadot <a class="header-anchor" href="#snowbridge-ethereum-assethubpolkadot" aria-hidden="true">#</a></h3><p>Just like Polkadot &lt;&gt; Kusama bridge the Snowbridge is implemented in as intuitive and native form as possible. The implementations for Polkadot -&gt; Ethereum and Ethereum -&gt; Polkadot differ due to different architecure so we will mention both scenarios.</p><ul><li><strong>Parameters</strong>: <ul><li>Same as in Parachain -&gt;¬†Parachain scenario</li></ul></li><li><strong>Errors</strong>: <ul><li>Same as in Parachain -&gt; Parachain scenario</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight has-diff"><code><span class="line"><span style="color:#676E95;font-style:italic;">//As Ethereum module is different from Polkadot modules (Thus Ethereum is not compatible with new hash response system), we provide complete implementation snippet.</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> provider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BrowserProvider</span><span style="color:#A6ACCD;">(window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ethereum)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> signer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> provider</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSigner</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">axios</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">https://api.lightspell.xyz/x-transfer-eth</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">AssetHubPolkadot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1000000000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">destAddress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> address</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> signer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAddress</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">currencySpec</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// {symbol: currencySymbol} | {id: currencyID}</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> apiResponse </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> GATEWAY_CONTRACT </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0xEDa338E4dC46038493b885327842fD3E301CaB39</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> contract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> IGateway__factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#A6ACCD;">(GATEWAY_CONTRACT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> signer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> abi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ethers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AbiCoder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defaultAbiCoder</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MultiAddressStruct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> abi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bytes32</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [formValues</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">address])</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">kind</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> contract</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendToken</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">      apiResonse</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">token</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      apiResonse</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">destinationParaId</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      address</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      apiResonse</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">destinationFee</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      apiResonse</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">amount</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> apiResonse</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fee</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> receipt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">wait</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (receipt </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error waiting for transaction completion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (receipt</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">status </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Transaction failed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> events</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LogDescription</span><span style="color:#A6ACCD;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    receipt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">logs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">log</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">contract</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">interface</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parseLog</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        topics</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">topics</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">event</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">events</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="snowbridge-assethubpolkadot-ethereum" tabindex="-1">Snowbridge AssetHubPolkadot -&gt; Ethereum <a class="header-anchor" href="#snowbridge-assethubpolkadot-ethereum" aria-hidden="true">#</a></h3><ul><li><strong>Parameters</strong>: <ul><li>Same as in Parachain -&gt;¬†Parachain scenario</li></ul></li><li><strong>Errors</strong>: <ul><li>Same as in Parachain -&gt; Parachain scenario</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">AssetHubPolkadot</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Ethereum</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">symbol</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WETH</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Any supported asset - WBTC, WETH.. - {symbol: currencySymbol} | {id: currencyID}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amount</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Amount&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Ethereum Address</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="batch-call" tabindex="-1">Batch call <a class="header-anchor" href="#batch-call" aria-hidden="true">#</a></h2><p>XCM API allows you to batch your XCM calls and send multiple at the same time via batch feature.</p><p><strong>Endpoint</strong> <code>POST /x-transfer-batch</code></p><ul><li><p><strong>Parameters</strong></p><ul><li><code>transfers</code> (Inside JSON body): (required): Represents array of XCM calls along with optional parameter &quot;options&quot; which contains &quot;mode&quot; to switch between BATCH and BATCH_ALL call forms.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;transfers&#39; is expected but not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//mode options: - BATCH</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//		- BATCH_ALL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer-batch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">transfers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;transfers&quot; with array of XCM transfers</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Example of JSON body</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	&quot;transfers&quot;: [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">		{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">			&quot;to&quot;: &quot;Moonriver&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">			&quot;amount&quot;: &quot;10000&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">			&quot;address&quot;: &quot;0x939229F9c6E2b97589c4a5A0B3Eb8664FFc00502&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">		},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">		{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">			&quot;to&quot;: &quot;Basilisk&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">			&quot;amount&quot;: &quot;10000&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">			&quot;address&quot;: &quot;bXgnPigqWnUTb9PxgCvnt61bsQoRQFnzLYYyRPV1bvB6DLu87&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">		}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	],</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	&quot;options&quot;: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">		&quot;mode&quot;: &quot;BATCH&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">}*/</span></span>
<span class="line"></span></code></pre></div><h2 id="asset-claim" tabindex="-1">Asset claim <a class="header-anchor" href="#asset-claim" aria-hidden="true">#</a></h2><p>Assets, that have been trapped in the cross-chain transfers can now be recovered through asset claim feature.</p><p><strong>Endpoint</strong>: <code>POST /asset-claim-hash</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Inside JSON body): (required): Represents the Parachain on which the asset will be claimed.</li><li><code>address</code> (Inside JSON body): (required): Specifies the address of the recipient.</li><li><code>fungible</code> (Inside JSON body): (required): Represents the asset being claimed. It should be a multilocation.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when parameter &#39;from&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;address&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;fungible&#39; is expected but not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/asset-claim-hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;from&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;address&quot; with destination wallet address (In AccountID32 or AccountKey20 Format) or custom Multilocation</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">fungible</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Asset Multilocation array</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Replace &quot;Asset Multilocation array&quot; with specific asset multilocation along with amount specification</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Example of asset multilocation array:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*&quot;fungible&quot;: [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &quot;id&quot;: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    &quot;Concrete&quot;: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      &quot;parents&quot;: 0,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      &quot;interior&quot;: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;Here&quot;: null</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  &quot;fun&quot;: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    &quot;Fungible&quot;: &quot;10000&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">}]*/</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="transfer-info-query" tabindex="-1">Transfer info query <a class="header-anchor" href="#transfer-info-query" aria-hidden="true">#</a></h2><p>Following functionality gives you all necessary information about your transfer including fee, sufficiency to transfer and more.</p><p><strong>Endpoint</strong>: <code>GET /transfer-info</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>origin</code> (Inside JSON body): (required): Represents the Parachain from which the assets will be transferred.</li><li><code>destination</code> (Inside JSON body): (required): Represents the Parachain to which the assets will be transferred.</li><li><code>currency</code>: (Inside JSON body): (required): Represents the asset being sent. It should be a string value.</li><li><code>amount</code>: (Inside JSON body): (required): Specifies the amount of assets to transfer. It should be a numeric value.</li><li><code>accountOrigin</code>: (Inside JSON body): (required): Specifies the address of the origin.</li><li><code>accountDestination</code>: (Inside JSON body): (required): Specifies the recipient&#39;s address.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when parameter &#39;origin/destination&#39; is not provided or existing</li><li><code>400</code> (Bad request exception) - Returned when parameter &#39;accountOrigin/accountDestination&#39; is not provided or correct</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency/amount&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;amount&#39; is not positive number</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3001/transfer-info?</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Parachain&quot; with chain you wish to query transfer info for as origin</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">destination</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Parachain</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;destination&quot; with chain you wish to query transfer info for as destination</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">currencySpec</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//{id: currencyID} | {symbol: currencySymbol} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;Native&quot;,&quot;value&quot;: &quot;currencySymbol&quot;} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;Foreign&quot;,&quot;value&quot;: &quot;currencySymbol&quot;} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;ForeignAbstract&quot;,&quot;value&quot;: &quot;currencySymbolAlias&quot;} | {multilocation: AssetMultilocationString} | {multilocation: AssetMultilocationJson} | {multilocation: &quot;type&quot;: &quot;Override&quot;,&quot;value&quot;: &quot;CustomAssetMultilocationJson&quot;}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Amount</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Amount&quot; with the numeric value you wish to transfer</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">accountOrigin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Account address</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with origin wallet address (In AccountID32 or AccountKey20 Format)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">accountDestination</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Account address</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with destination wallet address (In AccountID32 or AccountKey20 Format)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="asset-query" tabindex="-1">Asset query <a class="header-anchor" href="#asset-query" aria-hidden="true">#</a></h2><p>This functionality allows you to perform various asset queries with compatible Parachains.</p><h3 id="package-less-implementation-of-xcm-api-asset-features-into-your-application" tabindex="-1">Package-less implementation of XCM API Asset features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-asset-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/&lt;action&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Replace &quot;action&quot; with your desired action eg. &quot;Acala/native&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(response) </span><span style="color:#676E95;font-style:italic;">//use response data as necessary</span></span>
<span class="line"></span></code></pre></div><h3 id="query-native-asset-balance" tabindex="-1">Query native asset balance <a class="header-anchor" href="#query-native-asset-balance" aria-hidden="true">#</a></h3><p>The following endpoint allows you to query native asset balance for on specific chain.</p><p><strong>Endpoint</strong>: <code>POST /balance/:node/native</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (Path parameter): Specifies the name of the Parachain.</li><li><code>address</code> (Inside JSON body): (required): Specifies the address of the account.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when parameter &#39;address&#39; is not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/balance/:node/native</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with wallet address (In AccountID32 or AccountKey20 Format) </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-foreign-asset-balance" tabindex="-1">Query foreign asset balance <a class="header-anchor" href="#query-foreign-asset-balance" aria-hidden="true">#</a></h3><p>The following endpoint allows you to query foreign asset balance for on specific chain.</p><p><strong>Endpoint</strong>: <code>POST /balance/:node/foreign</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (Path parameter): Specifies the name of the Parachain.</li><li><code>address</code> (Inside JSON body): (required): Specifies the address of the account.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when parameter &#39;address&#39; is not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/balance/:node/foreign</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Address</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Replace &quot;Address&quot; with wallet address (In AccountID32 or AccountKey20 Format) </span></span>
<span class="line"><span style="color:#A6ACCD;">        currency: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Currency</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Replace &quot;Currency&quot; with {id: currencyID} | {symbol: currencySymbol} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;Native&quot;,&quot;value&quot;: &quot;currencySymbol&quot;} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;Foreign&quot;,&quot;value&quot;: &quot;currencySymbol&quot;} | {&quot;symbol&quot;: {&quot;type&quot;: &quot;ForeignAbstract&quot;,&quot;value&quot;: &quot;currencySymbolAlias&quot;} | {multilocation: AssetMultilocationString} | {multilocation: AssetMultilocationJson} | {multilocation: &quot;type&quot;: &quot;Override&quot;,&quot;value&quot;: &quot;CustomAssetMultilocationJson&quot;}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-assets-object" tabindex="-1">Query assets object <a class="header-anchor" href="#query-assets-object" aria-hidden="true">#</a></h3><p>The following endpoint retrieves all assets on a specific Parachain as an object.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Statemint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-asset-id" tabindex="-1">Query asset ID <a class="header-anchor" href="#query-asset-id" aria-hidden="true">#</a></h3><p>The following endpoint returns the asset id for the specific asset on a specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/id?symbol=:symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li><li><code>symbol</code> (path parameter): Specifies the currency symbol of the asset.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>404</code> (Bad request): When an asset with a specified currency symbol does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Interlay/id?symbol=USDT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-relay-chain-asset-symbol" tabindex="-1">Query Relay chain asset symbol <a class="header-anchor" href="#query-relay-chain-asset-symbol" aria-hidden="true">#</a></h3><p>The following endpoint returns the Relay chain asset symbol for a specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/relay-chain-symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Astar/relay-chain-symbol</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-native-assets" tabindex="-1">Query native assets <a class="header-anchor" href="#query-native-assets" aria-hidden="true">#</a></h3><p>The following endpoint returns native assets of specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/native</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Kylin/native</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-foreign-assets" tabindex="-1">Query foreign assets <a class="header-anchor" href="#query-foreign-assets" aria-hidden="true">#</a></h3><p>The following endpoint returns foreign assets of specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/other</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Statemine/other</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-all-asset-symbols" tabindex="-1">Query all asset symbols <a class="header-anchor" href="#query-all-asset-symbols" aria-hidden="true">#</a></h3><p>The following endpoint returns all asset symbols for specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/all-symbols</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Moonbeam/all-symbols</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-asset-support" tabindex="-1">Query asset support <a class="header-anchor" href="#query-asset-support" aria-hidden="true">#</a></h3><p>The following endpoint returns a boolean value that confirms if the asset is registered on a specific Parachain or not.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/has-support?symbol=:symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li><li><code>symbol</code> (path parameter): Specifies the symbol of the asset.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>404</code> (Bad request): When an asset with a specified currency symbol does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/HydraDX/has-support?symbol=DOT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-asset-decimals" tabindex="-1">Query asset decimals <a class="header-anchor" href="#query-asset-decimals" aria-hidden="true">#</a></h3><p>The following endpoint retrieves specific asset decimals on specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/decimals?symbol=:symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li><li><code>symbol</code> (path parameter): Specifies the currency symbol.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>404</code> (Bad request): When an asset with a specified currency symbol does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Basilisk/decimals?symbol=BSX</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-parachain-id" tabindex="-1">Query Parachain ID <a class="header-anchor" href="#query-parachain-id" aria-hidden="true">#</a></h3><p>The following endpoint retrieves Parachain&#39;s ID from Parachain&#39;s name</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/para-id</code></p><ul><li><strong>Parameters</strong>: <ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><strong>Errors</strong>: <ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Acala/para-id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-parachain-name" tabindex="-1">Query Parachain name <a class="header-anchor" href="#query-parachain-name" aria-hidden="true">#</a></h3><p>The following endpoint retrieves the Parachain&#39;s name from the Parachain&#39;s ID.</p><p><strong>Endpoint</strong>: <code>GET /assets/:paraId</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>paraId</code> (path parameter): Specifies the parachain ID.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>404</code> (Bad request): When a Parachain with a specified Parachain ID does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/2090</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-list-of-implemented-parachains" tabindex="-1">Query list of implemented Parachains <a class="header-anchor" href="#query-list-of-implemented-parachains" aria-hidden="true">#</a></h3><p>The following endpoint retrieves an array of implemented Parachains.</p><p><strong>Endpoint</strong>: <code>GET /assets</code></p><ul><li><strong>Parameters</strong>: None.</li><li><strong>Errors</strong>: <ul><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="query-xcm-pallets" tabindex="-1">Query XCM pallets <a class="header-anchor" href="#query-xcm-pallets" aria-hidden="true">#</a></h2><p>This functionality allows you to query the <code>XCM pallets</code> that Parachains currently support.</p><h3 id="package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application" tabindex="-1">Package-less implementation of XCM API XCM Pallet Query features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/pallets/&lt;action&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Replace &quot;action&quot; with your desired action eg. &quot;Acala/default&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(response) </span><span style="color:#676E95;font-style:italic;">//use response data as necessary</span></span>
<span class="line"></span></code></pre></div><h3 id="get-default-xcm-pallet" tabindex="-1">Get default XCM pallet <a class="header-anchor" href="#get-default-xcm-pallet" aria-hidden="true">#</a></h3><p>The following endpoint returns the default pallet for specific Parachain</p><p><strong>Endpoint</strong>: <code>GET /pallets/:node/default</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when path parameter &#39;node&#39; is not a valid Parachain</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/pallets/Acala/default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="get-all-supported-xcm-pallets" tabindex="-1">Get all supported XCM pallets <a class="header-anchor" href="#get-all-supported-xcm-pallets" aria-hidden="true">#</a></h3><p>The following endpoint returns all XCM Pallets that are supported on specific Parachain</p><p><strong>Endpoint</strong>: <code>GET /pallets/:node</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when path parameter &#39;node&#39; is not a valid Parachain</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/pallets/Basilisk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,173),p=[e];function t(r,c,i,y,D,F){return n(),a("div",null,p)}const C=s(l,[["render",t]]);export{A as __pageData,C as default};
