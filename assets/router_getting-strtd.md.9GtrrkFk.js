import{_ as s,c as i,ae as t,o as e}from"./chunks/framework.DRPMfuGp.js";const c=JSON.parse('{"title":"Getting started with SpellRouter‚òÑÔ∏è","description":"","frontmatter":{},"headers":[],"relativePath":"router/getting-strtd.md","filePath":"router/getting-strtd.md"}'),n={name:"router/getting-strtd.md"};function p(l,a,r,o,h,d){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="getting-started-with-spellrouter‚òÑÔ∏è" tabindex="-1">Getting started with SpellRouter‚òÑÔ∏è <a class="header-anchor" href="#getting-started-with-spellrouter‚òÑÔ∏è" aria-label="Permalink to &quot;Getting started with SpellRouter‚òÑÔ∏è&quot;">‚Äã</a></h1><p>This guide guides you through implementation of XCM Router that allows you to do various exciting actions on Polkadot and Kusama chains.</p><h2 id="starter-template-üõ´" tabindex="-1">Starter template üõ´ <a class="header-anchor" href="#starter-template-üõ´" aria-label="Permalink to &quot;Starter template üõ´&quot;">‚Äã</a></h2><p>Don&#39;t want to go through setup and build from ground up?</p><ul><li>Our team has created a <a href="https://github.com/paraspell/xcm-router-template" target="_blank" rel="noreferrer">XCM Router Starter template</a> for you!</li></ul><p>This template is programmed with React &amp; Vite framework. It contains basic components ready to set you off on your cross-chain dApp journey.</p><h2 id="install-peer-dependencies" tabindex="-1">Install peer dependencies <a class="header-anchor" href="#install-peer-dependencies" aria-label="Permalink to &quot;Install peer dependencies&quot;">‚Äã</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>‚ö†Ô∏è NOTE</span></span>
<span class="line"><span>Enabling Wasm is required by Hydration SDK in order for XCM-Router to work in your dAPP. You can either enable it in web app config or by plugin.</span></span>
<span class="line"><span>Hydration also requires augment package - https://github.com/galacticcouncil/sdk/issues/114</span></span>
<span class="line"><span></span></span>
<span class="line"><span>‚ö†Ô∏è‚ö†Ô∏è NOTE</span></span>
<span class="line"><span>XCM Router is now migrated towards PAPI library! To migrate you just need to replace old PJS injector with PAPI signer and install new peer dependency. Explore docs to find out more.</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pnpm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> polkadot-api</span></span></code></pre></div><h2 id="install-xcm-router-package" tabindex="-1">Install XCM Router package <a class="header-anchor" href="#install-xcm-router-package" aria-label="Permalink to &quot;Install XCM Router package&quot;">‚Äã</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pnpm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @paraspell/xcm-router</span></span></code></pre></div><h2 id="importing-package" tabindex="-1">Importing package <a class="header-anchor" href="#importing-package" aria-label="Permalink to &quot;Importing package&quot;">‚Äã</a></h2><p>After installing the XCM-Router package there are two ways of importing it:</p><h3 id="option-1-builder-pattern" tabindex="-1">Option 1: Builder pattern <a class="header-anchor" href="#option-1-builder-pattern" aria-label="Permalink to &quot;Option 1: Builder pattern&quot;">‚Äã</a></h3><p>This way allows you to enhance builder patterns and construct your calls in a simple way.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { RouterBuilder } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@paraspell/xcm-router&#39;</span></span></code></pre></div><h3 id="option-2-classic-pattern" tabindex="-1">Option 2: Classic pattern <a class="header-anchor" href="#option-2-classic-pattern" aria-label="Permalink to &quot;Option 2: Classic pattern&quot;">‚Äã</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ESM</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xcmRouter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@paraspell/xcm-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//Multiple import options</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { transfer, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         TransactionType, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         TTransferOptions, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         TTxProgressInfo } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@paraspell/xcm-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//As Polkadot moves to ESM only, our Router also moves to ESM only. CJS is not supported anymore.</span></span></code></pre></div>`,18)]))}const g=s(n,[["render",p]]);export{c as __pageData,g as default};
