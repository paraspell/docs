import{_ as s,c as a,o as n,d as e}from"./app.38caa334.js";const d=JSON.parse('{"title":"XCM Router (SpellRouter☄️)","description":"","frontmatter":{},"headers":[{"level":3,"title":"There are two scenarios XCM Router offers in API implementation:","slug":"there-are-two-scenarios-xcm-router-offers-in-api-implementation","link":"#there-are-two-scenarios-xcm-router-offers-in-api-implementation","children":[]},{"level":3,"title":"Package-less implementation of XCM API Router features into your application","slug":"package-less-implementation-of-xcm-api-router-features-into-your-application","link":"#package-less-implementation-of-xcm-api-router-features-into-your-application","children":[]},{"level":2,"title":"XCM Router example - Automatic exchange selection (Based on best price)","slug":"xcm-router-example-automatic-exchange-selection-based-on-best-price","link":"#xcm-router-example-automatic-exchange-selection-based-on-best-price","children":[]},{"level":2,"title":"XCM Router example - Manual exchange selection","slug":"xcm-router-example-manual-exchange-selection","link":"#xcm-router-example-manual-exchange-selection","children":[]},{"level":2,"title":"List of DEX chains, assets and Parachains supported by XCM Router","slug":"list-of-dex-chains-assets-and-parachains-supported-by-xcm-router","link":"#list-of-dex-chains-assets-and-parachains-supported-by-xcm-router","children":[]}],"relativePath":"api/xcmRouter.md"}'),o={name:"api/xcmRouter.md"},l=e(`<h1 id="xcm-router-spellrouter☄️" tabindex="-1">XCM Router (SpellRouter☄️) <a class="header-anchor" href="#xcm-router-spellrouter☄️" aria-hidden="true">#</a></h1><p>Following section covers XCM Router implementation in LightSpell XCM API. Users can use XCM Router to perform cross-chain transactions between compatible two chains and receive different assets than assets that were sent. This helps with liquidity and user experience as users do not need to perform multiple transactions to achieve the same result.</p><h3 id="there-are-two-scenarios-xcm-router-offers-in-api-implementation" tabindex="-1">There are two scenarios XCM Router offers in API implementation: <a class="header-anchor" href="#there-are-two-scenarios-xcm-router-offers-in-api-implementation" aria-hidden="true">#</a></h3><ul><li><a href="https://paraspell.github.io/docs/api/xcmRouter.html#xcm-router-example-automatic-exchange-selection-based-on-best-price" target="_blank" rel="noreferrer">Exchange asset cross-chain with automatic exchange chain selection (Based on best price)</a></li><li><a href="https://paraspell.github.io/docs/api/xcmRouter.html#xcm-router-example-manual-exchange-selection" target="_blank" rel="noreferrer">Exchange asset cross-chain with manual exchange chain selection</a></li></ul><p>We will explore both scenarios in the following sections.</p><h3 id="package-less-implementation-of-xcm-api-router-features-into-your-application" tabindex="-1">Package-less implementation of XCM API Router features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-router-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> submitTransaction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">api</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ApiPromise</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">tx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Extrinsic</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">signer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Signer</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">injectorAddress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">signAsync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">injectorAddress</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">signer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">void</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">({</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">status</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">dispatchError</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">txHash</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">})</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isFinalized</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Check if there are any dispatch errors</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">dispatchError</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">dispatchError</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isModule</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">decoded</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">registry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findMetaError</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">dispatchError</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">asModule</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">docs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">section</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">decoded</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">section</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">docs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">dispatchError</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#F07178;">()))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// No dispatch error, transaction should be successful</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">txHash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> buildTx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">api</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;font-style:italic;">module</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">section</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">parameters</span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tx</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">module</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">section</span><span style="color:#F07178;">](</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">parameters</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3001/router?</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Astar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Your origin chain</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Moonbeam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Your destination chain</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">currencyFrom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ASTR</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Currency to send</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">currencyTo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">GLMR</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Currency to receive</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10000000000000000000</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Amount to send</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">recipientAddress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Address of receiver</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">injectorAddress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Address of sender</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">slippagePct</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Max slippage percentage</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">txs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">toExchange</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> swap</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> toDest</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">        exchangeNode</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// create api promise for origin node</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> originApi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> ApiPromise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">wsProvider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// create api promise for exchange node (use echangeNode variable returned from API)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> swapApi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> ApiPromise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">wsProvider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">submitTransaction</span><span style="color:#A6ACCD;">(originApi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">buildTx</span><span style="color:#A6ACCD;">(originApi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> toExchange)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> signer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> injectorAddress)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">submitTransaction</span><span style="color:#A6ACCD;">(swapApi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">buildTx</span><span style="color:#A6ACCD;">(swapApi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> swap)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> signer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> injectorAddress)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">submitTransaction</span><span style="color:#A6ACCD;">(swapApi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">buildTx</span><span style="color:#A6ACCD;">(swapApi</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> toDest)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> signer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> injectorAddress)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="xcm-router-example-automatic-exchange-selection-based-on-best-price" tabindex="-1">XCM Router example - Automatic exchange selection (Based on best price) <a class="header-anchor" href="#xcm-router-example-automatic-exchange-selection-based-on-best-price" aria-hidden="true">#</a></h2><p>If you wish to have exchange chain selection based on best price outcome, you can opt for automatic exchange selection method. This method can be selected by <strong>not using</strong> <code>exchange:</code> parameter in the call. Router will then automatically select the best exchange chain for you based on the best price outcome.</p><p><strong>Endpoint</strong>: <code>GET /router</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Represents the Parachain from which the assets will be transferred.</li><li><code>to</code> (Query parameter): (required): Represents the Parachain to which the assets will be transferred.</li><li><code>currencyFrom</code> (Query parameter): (required): Represents the asset being sent.</li><li><code>currencyTo</code> (Query parameter): (required): Represents the asset being received.</li><li><code>amount</code> (Query parameter): (required): Specifies the amount of assets to transfer.</li><li><code>slippagePct</code> (Query parameter): (required): Specifies the slipeage percentage.</li><li><code>address</code> (Query parameter): (required): Specifies the address of the recipient.</li><li><code>injectorAddress</code> (Query parameter): (required): Specifies the address of the sender.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;to&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;to&#39; is not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; is not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyTo&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyTo&#39; is not a valid currency</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyFrom&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyFrom&#39; is not a valid currency</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;amount&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;slippagePct&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;address&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;address&#39; is not a valid address</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;injectorAddress&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;injectorAddress&#39; is not a valid address</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/router?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Polkadot</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Origin Parachain/Relay chain</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Interlay</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Destination Parachain/Relay chain</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currencyFrom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DOT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Currency to send</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currencyTo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">INTR</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Currency to receive</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Amount to send</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">slippagePct</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Max slipppage percentage</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Recipient address</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">injectorAddress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Address of sender</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="xcm-router-example-manual-exchange-selection" tabindex="-1">XCM Router example - Manual exchange selection <a class="header-anchor" href="#xcm-router-example-manual-exchange-selection" aria-hidden="true">#</a></h2><p>If you wish to select your exchange chain manually you can do that by providing aditional parameter <code>exchange:</code> in the call. Router will then use exchange chainn of your choice.</p><p><strong>Endpoint</strong>: <code>GET /router</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Represents the Parachain from which the assets will be transferred.</li><li><code>exchange</code> (Query parameter): (optional): Represents the Parachain DEX on which tokens will be exchanged (If not provided, DEX is selected automatically based on best price output).</li><li><code>to</code> (Query parameter): (required): Represents the Parachain to which the assets will be transferred.</li><li><code>currencyFrom</code> (Query parameter): (required): Represents the asset being sent.</li><li><code>currencyTo</code> (Query parameter): (required): Represents the asset being received.</li><li><code>amount</code> (Query parameter): (required): Specifies the amount of assets to transfer.</li><li><code>slippagePct</code> (Query parameter): (required): Specifies the slippage percentage.</li><li><code>address</code> (Query parameter): (required): Specifies the address of the recipient.</li><li><code>injectorAddress</code> (Query parameter): (required): Specifies the address of the sender.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;to&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;to&#39; is not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; is not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;exchange&#39; is not valid exchange</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyTo&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyTo&#39; is not a valid currency</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyFrom&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currencyFrom&#39; is not a valid currency</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;amount&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;slippagePct&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;address&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;address&#39; is not a valid address</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;injectorAddress&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;injectorAddress&#39; is not a valid address</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/router?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Polkadot</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Origin Parachain/Relay chain</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">exchange</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">AcalaDex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Exchange Parachain/Relay chain</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Interlay</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Destination Parachain/Relay chain</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currencyFrom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DOT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Currency to send</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currencyTo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">INTR</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Currency to receive</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Amount to send</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">slippagePct</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Max slipppage percentage</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Recipient address</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">injectorAddress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Address of sender</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="list-of-dex-chains-assets-and-parachains-supported-by-xcm-router" tabindex="-1">List of DEX chains, assets and Parachains supported by XCM Router <a class="header-anchor" href="#list-of-dex-chains-assets-and-parachains-supported-by-xcm-router" aria-hidden="true">#</a></h2><table><thead><tr><th>DEX</th><th>Can send to/receive from</th><th>Supported assets</th><th>Notes</th></tr></thead><tbody><tr><td>Acala DEX</td><td>Polkadot Relay, Astar, HydraDX, Interlay, Moonbeam, Parallel, AssetHubPolkadot, Unique network</td><td>ACA, DOT, aSEED, USDCet, UNQ, IBTC, INTR, lcDOT, LDOT</td><td>Fees are paid by either ACA or DOT</td></tr><tr><td>Karura DEX</td><td>Kusama Relay, Altair, Basilisk, BifrostKusama, Calamari, Crab, Parallel Heiko, Kintsugi, Moonriver, Quartz, Crust Shadow, Shiden, AssetHubKusama</td><td>BNC, USDCet, RMRK, ARIS, AIR, QTZ, CSM, USDT, KAR, KBTC, KINT, KSM, aSEED, LKSM, PHA, tKSM, TAI</td><td>Fees are paid by either KAR or KSM</td></tr><tr><td>HydraDX DEX</td><td>Polkadot Relay, Acala, Interlay, AssetHubPolkadot, Zeitgeist, Astar, Centrifuge, BifrostPolkadot</td><td>USDT, HDX, WETH, GLMR, IBTC, BNC, WBTC, vDOT, DAI, CFG, DOT, DAI, ZTG, WBTC, INTR, ASTR, LRNA, USDC</td><td>Chain automatically gives you native asset to pay for fees.</td></tr><tr><td>Basilisk DEX</td><td>Kusama Relay, Karura, AssetHubKusama, Tinkernet, Robonomics</td><td>BSX, USDT, aSEED, XRT, KSM, TNKR</td><td>Chain automatically gives you native asset to pay for fees.</td></tr><tr><td>Mangata DEX</td><td>Kusama Relay, AssetHubKusama, BifrostPolkadot, Moonriver, Turing, Imbue</td><td>MGX, IMBU, TUR, ZLK, BNC, USDT, RMRK, MOVR, vsKSM, KSM, vKSM</td><td>Chain requires native MGX asset to pay for fees.</td></tr><tr><td>Bifrost Kusama DEX</td><td>Kusama Relay, AssetHubKusama, Karura, Moonriver, Kintsugi, Mangata</td><td>BNC, vBNC, vsKSM, vKSM, USDT, aSEED, KAR, ZLK, RMRK, KBTC, MOVR, vMOVR</td><td>Chain requires native BNC asset for fees.</td></tr><tr><td>Bifrost Polkadot DEX</td><td>Polkadot Relay, AssetHubPolkadot, Moonbeam, Astar, Interlay</td><td>BNC, vDOT, vsDOT, USDT, FIL, vFIL, ASTR, vASTR, GLMR, vGLMR, MANTA, vMANTA</td><td>Chain requires native BNC asset for fees.</td></tr><tr><td>Interlay DEX</td><td>Polkadot Relay, Acala, Astar, Parallel, PolkadotAssetHub, HydraDX, BifrostPolkadot</td><td>INTR, DOT, IBTC, USDT, VDOT</td><td>Chain requires native INTR asset for fees.</td></tr><tr><td>Kintsugi DEX</td><td>Kusama Relay, Karura, KusamaAssetHub, Parallel Heiko, BifrostKusama</td><td>KINT,KSM,KBTC,USDT</td><td>Chain requires native KINT asset for fees.</td></tr></tbody></table>`,21),p=[l];function t(r,c,i,y,D,F){return n(),a("div",null,p)}const C=s(o,[["render",t]]);export{d as __pageData,C as default};
