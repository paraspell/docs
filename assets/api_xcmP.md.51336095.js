import{_ as s,c as a,o as e,d as n}from"./app.8a15a5fb.js";const h=JSON.parse('{"title":"Use XCM SDK✨ within XCM API","description":"","frontmatter":{},"headers":[{"level":2,"title":"Send XCM","slug":"send-xcm","link":"#send-xcm","children":[{"level":3,"title":"Package-less implementation of XCM API XCM features into your application","slug":"package-less-implementation-of-xcm-api-xcm-features-into-your-application","link":"#package-less-implementation-of-xcm-api-xcm-features-into-your-application","children":[]},{"level":3,"title":"Relay chain to Parachain (DMP)","slug":"relay-chain-to-parachain-dmp","link":"#relay-chain-to-parachain-dmp","children":[]},{"level":3,"title":"Parachain chain to Relay chain (UMP)","slug":"parachain-chain-to-relay-chain-ump","link":"#parachain-chain-to-relay-chain-ump","children":[]},{"level":3,"title":"Parachain to Parachain (HRMP)","slug":"parachain-to-parachain-hrmp","link":"#parachain-to-parachain-hrmp","children":[]}]},{"level":2,"title":"Asset query","slug":"asset-query","link":"#asset-query","children":[{"level":3,"title":"Package-less implementation of XCM API Asset features into your application","slug":"package-less-implementation-of-xcm-api-asset-features-into-your-application","link":"#package-less-implementation-of-xcm-api-asset-features-into-your-application","children":[]},{"level":3,"title":"Query assets object","slug":"query-assets-object","link":"#query-assets-object","children":[]},{"level":3,"title":"Query asset ID","slug":"query-asset-id","link":"#query-asset-id","children":[]},{"level":3,"title":"Query Relay chain asset symbol","slug":"query-relay-chain-asset-symbol","link":"#query-relay-chain-asset-symbol","children":[]},{"level":3,"title":"Query native assets","slug":"query-native-assets","link":"#query-native-assets","children":[]},{"level":3,"title":"Query foreign assets","slug":"query-foreign-assets","link":"#query-foreign-assets","children":[]},{"level":3,"title":"Query all asset symbols","slug":"query-all-asset-symbols","link":"#query-all-asset-symbols","children":[]},{"level":3,"title":"Query asset support","slug":"query-asset-support","link":"#query-asset-support","children":[]},{"level":3,"title":"Query asset decimals","slug":"query-asset-decimals","link":"#query-asset-decimals","children":[]},{"level":3,"title":"Query Parachain ID","slug":"query-parachain-id","link":"#query-parachain-id","children":[]},{"level":3,"title":"Query Parachain name","slug":"query-parachain-name","link":"#query-parachain-name","children":[]},{"level":3,"title":"Query list of implemented Parachains","slug":"query-list-of-implemented-parachains","link":"#query-list-of-implemented-parachains","children":[]}]},{"level":2,"title":"Create HRMP channels","slug":"create-hrmp-channels","link":"#create-hrmp-channels","children":[{"level":3,"title":"Package-less implementation of XCM API HRMP features into your application","slug":"package-less-implementation-of-xcm-api-hrmp-features-into-your-application","link":"#package-less-implementation-of-xcm-api-hrmp-features-into-your-application","children":[]},{"level":3,"title":"Open HRMP channel","slug":"open-hrmp-channel","link":"#open-hrmp-channel","children":[]},{"level":3,"title":"Close HRMP channel","slug":"close-hrmp-channel","link":"#close-hrmp-channel","children":[]}]},{"level":2,"title":"Query XCM pallets","slug":"query-xcm-pallets","link":"#query-xcm-pallets","children":[{"level":3,"title":"Package-less implementation of XCM API XCM Pallet Query features into your application","slug":"package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application","link":"#package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application","children":[]},{"level":3,"title":"Get default XCM pallet","slug":"get-default-xcm-pallet","link":"#get-default-xcm-pallet","children":[]},{"level":3,"title":"Get all supported XCM pallets","slug":"get-all-supported-xcm-pallets","link":"#get-all-supported-xcm-pallets","children":[]}]}],"relativePath":"api/xcmP.md"}'),o={name:"api/xcmP.md"},l=n(`<h1 id="use-xcm-sdk✨-within-xcm-api" tabindex="-1">Use XCM SDK✨ within XCM API <a class="header-anchor" href="#use-xcm-sdk✨-within-xcm-api" aria-hidden="true">#</a></h1><p>Following guide guides you through XCM SDK functionality implemented in XCM API.</p><h2 id="send-xcm" tabindex="-1">Send XCM <a class="header-anchor" href="#send-xcm" aria-hidden="true">#</a></h2><p>This functionality allows you to send XCM messages across Paraverse.</p><h3 id="package-less-implementation-of-xcm-api-xcm-features-into-your-application" tabindex="-1">Package-less implementation of XCM API XCM features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-xcm-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//Chain WS API instance that will send generated XCM Call</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> wsProvider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WsProvider</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YourChainWSPort</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Specify &quot;YourChainWSPort&quot; with WS Port of sender chain </span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> api </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> ApiPromise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">provider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> wsProvider </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//Method parameters should be here</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//For eg. from: &#39;Basilisk&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Constant required for every endpoint (As this is output they will provide)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">    module</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    section</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    parameters</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Response received is parsed to the call</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> promise </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tx[</span><span style="color:#89DDFF;">module</span><span style="color:#A6ACCD;">][section](</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">parameters</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Promise is then signed and can be subscribed to extrinsics</span></span>
<span class="line"><span style="color:#A6ACCD;">promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">signAndSend</span><span style="color:#A6ACCD;">(address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">signer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> injector</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">signer </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">status</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">txHash</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span></code></pre></div><h3 id="relay-chain-to-parachain-dmp" tabindex="-1">Relay chain to Parachain (DMP) <a class="header-anchor" href="#relay-chain-to-parachain-dmp" aria-hidden="true">#</a></h3><p>The following endpoint constructs the Relay chain to the Parachain XCM message. This message is constructed by providing the <code>to</code> parameter.</p><p><strong>Endpoint</strong>: <code>POST /x-transfer</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>to</code> (Query parameter): (required): Represents the Parachain to which the assets will be transferred.</li><li><code>amount</code> (Query parameter): (required): Specifies the amount of assets to transfer. It should be a numeric value.</li><li><code>address</code> (Query parameter): (required): Specifies the address of the recipient.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;to&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;to&#39; is not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is not a valid currency</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Statemine</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1000000000000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h3 id="parachain-chain-to-relay-chain-ump" tabindex="-1">Parachain chain to Relay chain (UMP) <a class="header-anchor" href="#parachain-chain-to-relay-chain-ump" aria-hidden="true">#</a></h3><p>The following endpoint constructs Parachain to Relay chain XCM message. This message is constructed by providing the <code>from</code> parameter.</p><p><strong>Endpoint</strong>: <code>POST /x-transfer</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Represents the Parachain from which the assets will be transferred.</li><li><code>amount</code> (Query parameter): (required): Specifies the amount of assets to transfer. It should be a numeric value.</li><li><code>address</code> (Query parameter): (required): Specifies the address of the recipient.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; is not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is not a valid currency</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Basilisk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1000000000000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h3 id="parachain-to-parachain-hrmp" tabindex="-1">Parachain to Parachain (HRMP) <a class="header-anchor" href="#parachain-to-parachain-hrmp" aria-hidden="true">#</a></h3><p>The following endpoint allows got creation of Parachain to Parachain XCM call. This call is specified by Parachains selected as origin - <code>from</code> and destination - <code>to</code> parameters.</p><p><strong>Endpoint</strong>: <code>POST /x-transfer</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Represents the Parachain from which the assets will be transferred.</li><li><code>to</code> (Query parameter): (required): Represents the Parachain to which the assets will be transferred.</li><li><code>currency</code> (Query parameter): (required): Represents the asset being sent. It should be a string value.</li><li><code>amount</code> (Query parameter): (required): Specifies the amount of assets to transfer. It should be a numeric value.</li><li><code>address</code> (Query parameter): (required): Specifies the address of the recipient.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is expected but not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;currency&#39; is not a valid currency</li><li><code>400</code> (Bad request exception) - Returned when entered nodes &#39;from&#39; and &#39;to&#39; are not compatible for the transaction</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>NOTE</strong> If you wish to transfer from Parachain that uses long IDs for example Moonbeam you have to add character &#39;n&#39; the end of currencyID. Eg: <code>currency: &quot;42259045809535163221576417993425387648n&quot;</code> will mean you wish to transfer xcDOT.</p><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/x-transfer?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Basilisk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Karura</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">KSM</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1000000000000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">address</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5F5586mfsnM6durWRLptYt3jSUs55KEmahdodQ5tQMr9iY96</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>AccountId32 and AccountKey20 addresses can be directly copied from PolkadotJS as our SDK has a handler to convert it into the desired hex string automatically.</p><p>Eg. use standard public key <code>141NGS2jjZca5Ss2Nysth2stJ6rimcnufCNHnh5ExSsftn7U</code> Instead of <code>0x84fc49ce30071ea611731838cc7736113c1ec68fbc47119be8a0805066df9b2b</code></p><h2 id="asset-query" tabindex="-1">Asset query <a class="header-anchor" href="#asset-query" aria-hidden="true">#</a></h2><p>This functionality allows you to perform various asset queries with compatible Parachains.</p><h3 id="package-less-implementation-of-xcm-api-asset-features-into-your-application" tabindex="-1">Package-less implementation of XCM API Asset features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-asset-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/&lt;action&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Replace &quot;action&quot; with your desired action eg. &quot;Acala/native&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(response) </span><span style="color:#676E95;font-style:italic;">//use response data as necessary</span></span>
<span class="line"></span></code></pre></div><h3 id="query-assets-object" tabindex="-1">Query assets object <a class="header-anchor" href="#query-assets-object" aria-hidden="true">#</a></h3><p>The following endpoint retrieves all assets on a specific Parachain as an object.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Statemint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-asset-id" tabindex="-1">Query asset ID <a class="header-anchor" href="#query-asset-id" aria-hidden="true">#</a></h3><p>The following endpoint returns the asset id for the specific asset on a specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/id?symbol=:symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li><li><code>symbol</code> (path parameter): Specifies the currency symbol of the asset.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>404</code> (Bad request): When an asset with a specified currency symbol does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Interlay/id?symbol=USDT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-relay-chain-asset-symbol" tabindex="-1">Query Relay chain asset symbol <a class="header-anchor" href="#query-relay-chain-asset-symbol" aria-hidden="true">#</a></h3><p>The following endpoint returns the Relay chain asset symbol for a specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/relay-chain-symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Astar/relay-chain-symbol</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-native-assets" tabindex="-1">Query native assets <a class="header-anchor" href="#query-native-assets" aria-hidden="true">#</a></h3><p>The following endpoint returns native assets of specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/native</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Kylin/native</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-foreign-assets" tabindex="-1">Query foreign assets <a class="header-anchor" href="#query-foreign-assets" aria-hidden="true">#</a></h3><p>The following endpoint returns foreign assets of specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/other</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Statemine/other</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-all-asset-symbols" tabindex="-1">Query all asset symbols <a class="header-anchor" href="#query-all-asset-symbols" aria-hidden="true">#</a></h3><p>The following endpoint returns all asset symbols for specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/all-symbols</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Moonbeam/all-symbols</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-asset-support" tabindex="-1">Query asset support <a class="header-anchor" href="#query-asset-support" aria-hidden="true">#</a></h3><p>The following endpoint returns a boolean value that confirms if the asset is registered on a specific Parachain or not.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/has-support?symbol=:symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li><li><code>symbol</code> (path parameter): Specifies the symbol of the asset.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>404</code> (Bad request): When an asset with a specified currency symbol does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/HydraDX/has-support?symbol=DOT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-asset-decimals" tabindex="-1">Query asset decimals <a class="header-anchor" href="#query-asset-decimals" aria-hidden="true">#</a></h3><p>The following endpoint retrieves specific asset decimals on specific Parachain.</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/decimals?symbol=:symbol</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li><li><code>symbol</code> (path parameter): Specifies the currency symbol.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>404</code> (Bad request): When an asset with a specified currency symbol does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Basilisk/decimals?symbol=BSX</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-parachain-id" tabindex="-1">Query Parachain ID <a class="header-anchor" href="#query-parachain-id" aria-hidden="true">#</a></h3><p>The following endpoint retrieves Parachain&#39;s ID from Parachain&#39;s name</p><p><strong>Endpoint</strong>: <code>GET /assets/:node/para-id</code></p><ul><li><strong>Parameters</strong>: <ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><strong>Errors</strong>: <ul><li><code>400</code> (Bad request): When a specified Parachain does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/Acala/para-id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-parachain-name" tabindex="-1">Query Parachain name <a class="header-anchor" href="#query-parachain-name" aria-hidden="true">#</a></h3><p>The following endpoint retrieves the Parachain&#39;s name from the Parachain&#39;s ID.</p><p><strong>Endpoint</strong>: <code>GET /assets/:paraId</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>paraId</code> (path parameter): Specifies the parachain ID.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>404</code> (Bad request): When a Parachain with a specified Parachain ID does not exist.</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets/2090</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="query-list-of-implemented-parachains" tabindex="-1">Query list of implemented Parachains <a class="header-anchor" href="#query-list-of-implemented-parachains" aria-hidden="true">#</a></h3><p>The following endpoint retrieves an array of implemented Parachains.</p><p><strong>Endpoint</strong>: <code>GET /assets</code></p><ul><li><strong>Parameters</strong>: None.</li><li><strong>Errors</strong>: <ul><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/assets</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="create-hrmp-channels" tabindex="-1">Create HRMP channels <a class="header-anchor" href="#create-hrmp-channels" aria-hidden="true">#</a></h2><p>The following functionality allows you to open or close HRMP channels between Parachains.</p><h3 id="package-less-implementation-of-xcm-api-hrmp-features-into-your-application" tabindex="-1">Package-less implementation of XCM API HRMP features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-hrmp-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/hrmp/channels?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//Method parameters should be here</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//For eg. from: &#39;Basilisk&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//Replace the method with the method your scenario uses eg. &quot;POST&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">YourMethod</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Here we receive data</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> module</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> section</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> parameters </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Parsing received data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Received data needs to be wrapped in a sudo call - only the sudo account can </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//perform these eg. Alice in localhost</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> promise </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sudo</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sudo</span><span style="color:#A6ACCD;">(api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tx[</span><span style="color:#89DDFF;">module</span><span style="color:#A6ACCD;">][section](</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">parameters))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Call is signed here and can subscribe to extrinsics</span></span>
<span class="line"><span style="color:#A6ACCD;">promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">signAndSend</span><span style="color:#A6ACCD;">(alice</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;font-style:italic;">status</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">txHash</span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h3 id="open-hrmp-channel" tabindex="-1">Open HRMP channel <a class="header-anchor" href="#open-hrmp-channel" aria-hidden="true">#</a></h3><p>The following endpoint serves to open a new HRMP channel between Parachains defined with <code>origin</code> &amp; <code>destination</code> parameters. Users also provide <code>maxSize</code> and <code>maxMessageSize</code> details.</p><p><strong>Endpoint</strong>: <code>POST /hrmp/channels</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Specifies the origin Parachain.</li><li><code>to</code> (Query parameter): (required): Specifies the destination Parachain.</li><li><code>maxSize</code> (Query parameter): (required): Specifies the maximum size.</li><li><code>maxMessageSize</code> (Query parameter): (required): Specifies the maximum message size.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameters &#39;from&#39; or &#39;to&#39; are not a valid Parachains</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;maxSize&#39; pr &#39;maxMessageSize&#39; is not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/hrmp/channels?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Karura</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> BifrostKusama</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">maxSize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">maxMessageSize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1024</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="close-hrmp-channel" tabindex="-1">Close HRMP channel <a class="header-anchor" href="#close-hrmp-channel" aria-hidden="true">#</a></h3><p>The following endpoint serves to close HRMP channels routed from Parachain defined with the <code>from</code> parameter. Users also provide <code>inbound</code> and <code>outbound</code> details.</p><p><strong>Endpoint</strong>: <code>DELETE /hrmp/channels</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>from</code> (Query parameter): (required): Specifies the origin Parachain.</li><li><code>inbound</code> (Query parameter): (required): Specifies the maximum inbound.</li><li><code>outbound</code> (Query parameter): (required): Specifies the maximum outbound.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;from&#39; is not provided</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;from&#39; is not a valid Parachain</li><li><code>400</code> (Bad request exception) - Returned when query parameter &#39;inbound&#39; or &#39;outbound&#39; is not provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/hrmp/channels?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URLSearchParams</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Karura</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">inbound</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">outbound</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DELETE</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="query-xcm-pallets" tabindex="-1">Query XCM pallets <a class="header-anchor" href="#query-xcm-pallets" aria-hidden="true">#</a></h2><p>This functionality allows you to query the <code>XCM pallets</code> that Parachains currently support.</p><h3 id="package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application" tabindex="-1">Package-less implementation of XCM API XCM Pallet Query features into your application <a class="header-anchor" href="#package-less-implementation-of-xcm-api-xcm-pallet-query-features-into-your-application" aria-hidden="true">#</a></h3><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/pallets/&lt;action&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//Replace &quot;action&quot; with your desired action eg. &quot;Acala/default&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(response) </span><span style="color:#676E95;font-style:italic;">//use response data as necessary</span></span>
<span class="line"></span></code></pre></div><h3 id="get-default-xcm-pallet" tabindex="-1">Get default XCM pallet <a class="header-anchor" href="#get-default-xcm-pallet" aria-hidden="true">#</a></h3><p>The following endpoint returns the default pallet for specific Parachain</p><p><strong>Endpoint</strong>: <code>GET /pallets/:node/default</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when path parameter &#39;node&#39; is not a valid Parachain</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/pallets/Acala/default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="get-all-supported-xcm-pallets" tabindex="-1">Get all supported XCM pallets <a class="header-anchor" href="#get-all-supported-xcm-pallets" aria-hidden="true">#</a></h3><p>The following endpoint returns all XCM Pallets that are supported on specific Parachain</p><p><strong>Endpoint</strong>: <code>GET /pallets/:node</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>node</code> (path parameter): Specifies the name of the Parachain.</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when path parameter &#39;node&#39; is not a valid Parachain</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><p><strong>Example of request:</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/pallets/Basilisk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,133),p=[l];function t(r,c,i,y,d,D){return e(),a("div",null,p)}const C=s(o,[["render",t]]);export{h as __pageData,C as default};
