import{_ as i,c as a,ae as n,o as l}from"./chunks/framework.DRPMfuGp.js";const c=JSON.parse('{"title":"XCM AnalyserðŸ”Ž","description":"","frontmatter":{},"headers":[],"relativePath":"api/xcmAnalyser.md","filePath":"api/xcmAnalyser.md"}'),e={name:"api/xcmAnalyser.md"};function t(p,s,h,r,k,o){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="xcm-analyserðŸ”Ž" tabindex="-1">XCM AnalyserðŸ”Ž <a class="header-anchor" href="#xcm-analyserðŸ”Ž" aria-label="Permalink to &quot;XCM AnalyserðŸ”Ž&quot;">â€‹</a></h1><p>Following section covers implementation of XCM Analyser in LightSpell XCM API. Users can analyse either independent multilocations or entire XCM Calls.</p><h2 id="analyse-multilocation" tabindex="-1">Analyse Multilocation <a class="header-anchor" href="#analyse-multilocation" aria-label="Permalink to &quot;Analyse Multilocation&quot;">â€‹</a></h2><p><strong>Endpoint</strong>: <code>POST /v3/xcm-analyser</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>multilocation</code>: Specific multilocation</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when no Multilocation is provided</li><li><code>400</code> (Bad request exception) - Returned when wrongly formatted Multilocation is provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:3001/v3/xcm-analyser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;POST&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    headers: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;Content-Type&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;application/json&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    body: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        multilocation: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Multilocation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//Replace Multilocation with specific Multilocation you wish to analyse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="analyse-xcm-call" tabindex="-1">Analyse XCM call <a class="header-anchor" href="#analyse-xcm-call" aria-label="Permalink to &quot;Analyse XCM call&quot;">â€‹</a></h2><p><strong>Endpoint</strong>: <code>POST /v3/xcm-analyser</code></p><ul><li><p><strong>Parameters</strong>:</p><ul><li><code>xcm</code>: Complete XCM call</li></ul></li><li><p><strong>Errors</strong>:</p><ul><li><code>400</code> (Bad request exception) - Returned when no XCM call is provided</li><li><code>400</code> (Bad request exception) - Returned when wrongly formatted Multilocation is provided</li><li><code>500</code> (Internal server error) - Returned when an unknown error has occurred. In this case please open an issue.</li></ul></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:3001/v3/xcm-analyser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;POST&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    headers: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;Content-Type&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;application/json&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    body: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        xcm: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;XCM&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //Replace XCM with the specific XCM call you wish to analyse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,10)]))}const E=i(e,[["render",t]]);export{c as __pageData,E as default};
